on:
  push:
    branches:
      - main
      - master

name: bookdown

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1
      
      - name: Cache pandoc
        uses: actions/cache@v2
        id: cache-pandoc
        with:
          path: "~/pandoc"
          key: ${{secrets.PANDOC_VERSION}}
      
      - name: Install apt packages
        env:
          CACHE_HIT: ${{steps.cache-aptdir.outputs.cache-hit}}
          APTDIR_VERSION: ${{secrets.APTDIR_VERSION}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/aptdir/* /
          else
            sudo apt-get install -y pandoc="$APTDIR_VERSION"
            sudo apt-get install -y pandoc-citeproc="$APTDIR_VERSION"
            sudo apt-get install gdal-bin="$APTDIR_VERSION"
            sudo apt-get install proj-bin="$APTDIR_VERSION"
            sudo apt-get install libgdal-dev="$APTDIR_VERSION"
            sudo apt-get install libproj-dev="$APTDIR_VERSION"
            mkdir -p ~/aptdir
            sudo dpkg -L aptdir | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/aptdir/
          fi
          
      - name: Cache renv packages
        uses: actions/cache@v1
        with:
         path: ${{ env.RENV_PATHS_ROOT }}
         key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
         restore-keys: |
           ${{ runner.os }}-renv-

      - name: Restore renv packages
        shell: Rscript {0}
        run: |
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv")
          renv::restore()
           
      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", quiet = TRUE)'

      - name: Commit automatic build
        run: |
           git config --local user.name "$GITHUB_ACTOR"
           git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
           git add docs
           git commit docs -m 'Automatic build' || echo "No changes"
           git push origin || echo "No changes to commit"
