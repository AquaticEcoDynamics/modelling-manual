[["index.html", "Environmental Dynamics Workbook Introduction", " Environmental Dynamics Workbook Matt Hipsey, Dan Paraska, Alanna Kursar, Giles Knight Last updated: 2022-08-02 Introduction Welcome to the Environmental Dynamics Workbook! This workbook supplements the practical component of the Environmental Dynamics unit and is designed to develop your ability to model environmental systems. Each practical class has a corresponding module that will be added to the workbook as the semester progresses. If you are at all unfamiliar with using Excel or R, please visit the Getting Started section of this workbook before commencing the first module. Please contact your Unit Coordinator or tutor for queries relating to this workbook, or refer to the Unit Outline on LMS for matters relating to the unit’s structure. Contents Introduction Getting started Module 1 - Modelling in Excel Module 2 - Biogeochemistry Module 3 - Climate Modeling Module 4 - Oceanic Acidification Module 5a - Catchment Water Balance Module 5b - Land Use and Nutrient Management Module 6 - River Pollution Module 7 - Lake Ecosystem Dynamics References "],["GettingStarted.html", "Getting Started", " Getting Started Tools You’ll Need Excel Excel is available on all computer laboratory PC’s and can be freely downloaded to personal devices here. You should already feel confident using Excel from your previous units, however if you need further guidance please visit UWA’s resources: Getting started with Excel Using formulas and functions in Excel R To get started with R, first download the base R system onto your computer. By itself, this provides a rudimentary console for interacting with the R programming language. For a more user-friendly experience, download the R Studio integrated development environment (IDE). R can be downloaded here R Studio can be downloaded here Terminology File types In this unit you will largely be dealing with two kinds of ‘R files’: R script files (e.g. Equations.R) and, R project files (e.g. Module2Biogeochem.Rproj) R scripts are the raw instructions that tell the R programming language what to do. Meanwhile, an R Project file simply creates an independent workplace environment for you to interact with and manage your scripts. It’s wise to create a new R Project file whenever you start working on a new project. Functions and packages Just like Excel, you can interact with your data using a variety of functions in R. Functions are the tools you use to get the job done. For example, the plot() function can be used to create graphs. R is an open source programming language, meaning anyone can create their own functions and bundle them up in a collection known as a package. Comments All programming languages allow the user to write comments on their code to assist in readability and structure. In R, a comment is defined as a line beginning with a #. Any characters written after the # are ignored by R and not executed. It’s good practice to get into the habit of commenting your R code as it will likely save you (or someone else!) a lot of time later down the track. # This is a comment! library(tidyverse) # You can load packages with the library() function # Inspect your data with the head() function head(iris) # Create a graph using the ggplot() function ggplot(data = iris, mapping = aes(x = Petal.Length, y = Petal.Width, colour = Species)) + geom_point() + theme_light() To comment multiple lines of code at once in R Studio, pressCommand + Shift + Con MacOS orControl + Shift + Con Windows Further R resources If you want to learn more about R and the tidyverse packages, we recommend reading the following (free) textbooks: R for Data Science ggplot2: elegant graphics for data analysis Unzipping files Many of the module resources found in this workbook are downloaded as ‘zipped’ (i.e. compressed) files. ‘Unzipping’ (i.e. extracting) these files is simple. On MacOS, simply double click the ‘zipped’ file: On Windows, click ‘Extract All’ and follow the prompt: "],["M1_1.html", "Module 1: Modelling in Excel", " Module 1: Modelling in Excel Environmental Flows to an Estuary Objectives Use scenario assessment to identify the impacts of water diversion on a coastal lake system. Become familiar with basic spreadsheet commands in Excel by conducting an environmental flow analysis and building a simple impact model. What are environmental flows? Lakes, rivers and estuaries are adapted to receive water based on the natural hydrological condition, but often water is required upstream for other purposes. An environmental flow is water that is provided to the environment to maintain its health and natural diversity In simple terms: Provision of water to satisfy environmental requirements for ‘healthy’ (natural) function. Environmental flows are a form of river/wetland restoration. They are sometimes referred to as “e-flows”. In the Murray-Darling Basin (MDB), a water market was established that allows for irrigation entitlements to be “traded”; e-water must be bought from the “water holder” (in this case that is the Commonwealth Environmental Water Holder, CEWH). Flow diversion case study: Robe Lakes What happens if we divert freshwater away from a coastal lake system? How much flow diversion is “acceptable”? In this exercise we use a real data-set from the Robe Lakes system in South Australia to explore this question. Figure 1: Explore the case study area with this interactive map. We can plan for e-water requirements to a highly valued system using scenario modelling, and the concept of a “flow-response model” (or flow-response relationship). In this case we look at an example in South Australia where an assessment for water diversion is being undertaken, and we seek to look at what impact this might have on the salinity of a coastal lake. In other words, if we change the flow regime, what will the response be. In this case, salinity is an environmental indicator of ecological requirements. Specifically in this example, we assess the impact of diverting water from “Drain L”, thereby reducing water to the Robe Lakes. Before we assess our diversion scenario, we must first analyse the historical flow data, to understand the historical flow regime. Module resources Download the Excel spreadsheet for this module by clicking the download button in the tool bar . Exercises You are given a time-series of daily river flow (through the Drain) and need to assess how different diversion scenarios impact the freshwater flow delivery to a down stream estuary. The steps below allow us to: “Bin” (aka categorise) the daily flow into different categories (using an IF statement) Summarise the daily flows into annual totals (using a PIVOT table) Describe the historical flow variance in terms of an exceedance probability plot Create to alternate “diversion scenarios”. These are “what-if” type scenarios where we explore what would have occurred if the diversion policy was in place. Build a simple empirical (statistical) model linking drain flow rate and estuary response - we measure response in terms of salinity. Use the empirical model to show what the salinity in the estuarine lakes would have looked like if the flow diversion policy was in place. Now that we have an overview, lets get started! Follow closely the below steps from 1 to 9. Categorise the flow into different categories. For this flow time-series, calculate the volume of daily flow within the following bands 0-40; 40-80; 80-120; 120-200; 200-400; 400-1000; &gt;1000 Use a nested IF() statement in adjacent columns to partition flows For this flow time-series, calculate the number of days of daily flow within the above bands and then work out annual average number of days. The latter is simply computed by dividing the total number of days by the number of years in the data-set. Use COUNT() to get the number of entries in the column Calculate the annual amount of flow in total and in each flow band. You may do the annual averaging manually (slow) or the pivot table method (fast). For the pivot table method: Insert a new column B, Label it Year. Type the year number into the first cell, make sure it is formatted as a number. Click two times on the little square in the corner of the box. This will fill down the page. Repeat this at each year change and you will have the year only information which you can then use to summarise data. As the original date has day numbers and decimal time each one is unique so you end up with a record for each day. This way you get a record for each year. Use YEAR() to speed this step up Highlight all the data. It must have headings for each column or it won’t work. Go to “Insert” then “Pivot Table”. Click OK as you want the default settings. Then you just fiddle until you get what you want. The following is an example: Sort the years from highest to lowest total annual flow: Add a new column next to the flows indexing the years sequentially (i.e. 1, 2, 3…) Add a new column next to the indices calculating the probability of meeting the annual flow: \\(P(Yri) = \\frac{i}{\\text{number of years}+1}\\) Create a scatter plot of the flow (y-axis) vs probability (x-axis) to create an “exceedance” curve Sum each year Flow diversion scenarios Assess the amount of water available for flow diversion for two scenarios by adding a new time-series column for each option: Water below 50 ML/day and above 550 ML/day is NOT diverted Water below 150 ML/day and above 1000 ML/day is NOT diverted Construct a nested IF() that solves the following: Add two new columns for each of the above to work out cumulative amount (running total) of diverted water \\(\\text{Cumulated Volume} = \\text{Previous Cumulated Volume}+\\text{Today&#39;s Diverted Discharge}\\) Assessing impacts on lake salinity Create a scatter plot of historical salinity (as EC) collected from the site marked in the map (+) vs daily discharge from the drain (see sheet: Estuary – Salinity). Fit a trendline to the data and display equation and R2 – this is a statistical model. In a new time-series column in the previous sheet, use the statistical model from above to predict a salinity time-series for the above station in the estuary under the two diversion scenarios compared to the base case. Submission In this exercise, we have explored the complexities of allocating water to the environment in a contested situation (i.e., where there are competing “customers” for the water resource). In particular, we can summarise environmental flows: appreciate that there is a potential conflict between e-flow vs irrigation allocation e-flow allocation is a river restoration and maintenance tool the array of benefits from e-water need to quantified and maybe site specific there is a need for identifying “Sustainable Diversion Limits” based on assessment of historical flow requirements. Submit properly formatted graphs and tables of the following sections of the lab: Q2: Table of the number of days daily flow within the above bands and annual average number of days Q3: Table of the annual amount of flow in total and in each band Q4: Table of annual flow by year with index and probability. Scatter plot of the flow vs probability curve Q6: Table of the cumulative amount of diverted water Q7 &amp; 8: Scatterplot of the EC vs. daily discharge from the drain, with trendline (hint: exponential), equation and R2 value Q9: Plot of the salinity timeseries of the two diversion scenarios compared to the base case In less than 100 words, discuss which is the most appropriate scenario choice for management of the estuary These are in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable "],["M2_1.html", "Module 2: Biogeochemistry", " Module 2: Biogeochemistry Bacterially Mediated Organic Matter Oxidation Rates Objectives Become familiar with basic spread sheet commands in excel by building a simple biogeochemical model from chemical and mathematical equations. Become familiar with the program R Studio and compare it to Excel. Modelling concepts This model has variables of concentration and rate, no spatial dimensions, and it has a dimension of time. Last week’s model had variables of volume and concentration (salinity), and was also resolved in time. In coming weeks the models will be resolved in zero, one, two or three dimensions of space, and only some will be resolved in time. Remember that a chemical reaction can be described using a simple differential equation. For the concetration of OM, we can write it as: \\[\\begin{equation} \\frac{dOM}{dt} = -R_{OM} = -k_{OM}OM \\tag{1} \\end{equation}\\] Here, \\(k_{OM}\\) is the rate of the organic matter decay reaction, in units of \\(/year\\), and \\(OM\\) is a concentration of organic matter in units of \\(mM\\). In this activity going down the rows of the Excel spread sheet means going forward in time, as the differential equations divide the time axis into hundreds of tiny little chunks (i.e., each row is a day in this weeks setup). The concentration at any point in time may depend on concentration at the previous point in time. We use the notation concentration @ t depends on concentration @ t-1. We write this by “discretizing” the equation, as: \\[\\begin{equation} OM^{t} = OM^{t-1} - (k_{OM} OM^{t-1})\\Delta t \\tag{2} \\end{equation}\\] This states that the current concentration is equal to the previous days concentration, subtract any reaction that occured over the past day. Organic matter oxidation Organic matter (dead algae, leaves etc.) is oxidised by different bacteria that use a range of oxidants. The bacteria simultaneously consume organic matter and an oxidant, in a similar way to how humans consume carbohydrate and oxygen. Scientists have observed that there is a general sequence of oxidants used, based on the energy available for each process. When all of the oxidants are consumed, methanogenesis takes place, where bacteria use the organic matter alone without any oxidant. This is similar to the lactic acid metabolic system that the human body uses when oxygen is in short supply, such as when you go for a run. Remember that methane is a reduced byproduct, not an oxidant. Other reduced by-products include N2 gas, Mn2+ and Fe2+ metal ions, and the S2- anion. We can construct a model to determine the rates at which the oxidation takes place, and use the rates to determine other processes such as oxygen consumption, denitrification or phosphate adsorption. The rate is dependent on the concentration of the organic matter, \\(\\color{#E36C0A}{OM}\\), and a rate constant, \\(\\color{#00B0F0}{k_{OM}}\\). The rate is not dependent on the concentration of the oxidant, until the oxidant concentration becomes very low: this process is included as a limitation term (With more O2 you do not become super; with less O2 you get sleepy). A Monod equation is used to limit the rate. \\[\\begin{equation} R_{O_{2}} = \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{O_{2}}{O_{2}+K_{O_{2}}}} \\tag{3} \\end{equation}\\] Figure 2: Move the slider to see the effect of changing the \\(K_{O_2}\\) value in the monod equaiton. The generally observed sequence of oxidants is modelled with an inhibition process, so that a higher energy yielding oxidant, such as oxygen, inhibits a lower energy oxidant such as iron. \\[\\begin{align*} R_{NO_{3}} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{NO_{3}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{4}\\\\ R_{Mn} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{Mn}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{5}\\\\ R_{Fe} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{Fe}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{6} \\\\ R_{SO_{4}} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{SO_{4}^{2-}}{SO_{4}^{2-}+K_{SO_{4}}}}\\color{#FF0000}{\\frac{K_{Fe}}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{7}\\\\ R_{Meth} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#FF0000}{\\frac{K_{SO_{4}}}{SO_{4}^{2-}+K_{SO_{4}}}}\\color{#FF0000}{\\frac{K_{Fe}}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{8}\\\\ \\end{align*}\\] Note that the total amount of \\(OM\\) decay, \\(R_{OM}\\), is the sum of the all the individual pathways listed above. In this lab, we simulate a blob of aquatic sediment. It is a closed system, so that the initial concentrations react until they reach equilibrium. This system is also perfectly mixed, with an unchanging biomass of bacteria, and so there is no spatial resolution. This allows us to focus on the chemical reactions alone. Module resources Download the Excel spreadsheet and R scripts for this module by clicking the download button in the tool bar . Exercises Building the model in Excel Looking at the sequence of equations above: what is the difference between the limitation and the inhibition term? Have a good think about this. If concentration were amazingly bigger or smaller than the \\(K_{O_{x}}\\)1, what would happen to the rates of the higher and lower energy processes? For example, with a high oxygen concentration, what would happen to the manganese reduction rate? With a low oxygen and nitrate concentration, and a high manganese concentration, what would happen to the manganese oxidation rate? Complete the excel spreadsheet for iron reduction, sulfate reduction and methanogenesis. Oxygen, nitrate and manganese are done already, so copy the method and use the equations at the tops of the columns. It is tedious, fiddly and there is a good chance that you will introduce bugs that are hard to find. This is the nature of Excel. The rate is dependent on the concentration in the previous time step – this is called an explicit solution (as opposed to implicit). Complete the line plot (1) of relative oxidant concentration for iron and sulphate. Right click on the plot and use ‘Add data’, make the x axis time and the y axis relative concentration. It is easy to visualise if you keep the colours consistent, and choose the colours that you like. Adjust the values for the initial condition and the half-saturation constants and see how the lines move on your plot. Add more time steps underneath if you want to see what happens over the long term. Complete the area plot (2) of reaction rates, then play around with the numbers to test the sensitivities of the outputs to the parameter inputs Figure 3: Move the slider to experiment with changing the \\(K_{O_2}\\) value. Building the model in R Now the excel spreadsheet is working, the next step is to repeat the process in R. Open the R project and the three scripts: there is one in which you set the input parameters and initial conditions; one which has the equations; and one which is used for plotting the outputs. Read through them and become familiar with what is in each. Run each script in sequence, starting with Inputs, then Equations, then Plotting. The plotting script should make a plot appear in the bottom right corner. You can press Cmd+Enter on MacOS, or Ctrl+Enter on Windows instead of clicking the ‘Run’ button. Enter the inputs, equations and plotting scripts for iron, sulfate and methanogenesis reactions, just as you did in the excel spreadsheet. Remember that you just need a rate of methanogenesis: methane is not an oxidant like sulfate. Step 1: Enter the inputs for Iron. Don’t forget to ‘run’ these! Step 2: Write the equation. It should match Equation (6). Step 3: Graph it and repeat previous steps for the other oxidants. In the Plotting script, uncomment (remove the #s) the lines starting with png and dev.off. Now if you run the plot (3) again, it saves the plot to a .png file. You can edit the settings of the png line to create a high quality figure to put in the report. Now we have a working process-based model. This was the hard and boring part, but now we can be creative. So far we have established an initial condition and let it run to completion, but next we can model a hypothetical environmental situation. For example, imagine there were an oxygen fluctuation, perhaps from algal photosynthesis occurring in the day but not at night in a lake, or from the tidal movement of hypoxic water. In either Excel or R, create a new environmental situation that involves organic matter oxidation. Consider the assumptions you are making and how important they are. Use the model to test the effect of this situation on concentrations and rates. For example, what would happen if there were regular organic matter deposition as a boundary condition? Or maybe what if there were a constant oxygen concentration? What conditions might be needed to minimise methanogenesis? How could you maximise denitrification? I will give higher marks if you do something original and creative. Write a brief description of your new situation and create one plot (4) to explain your result. Submission Submit properly formatted graphs and tables of the following sections of the lab: Graph of concentration (y) against time (x) scatter plot, for all oxidants, made in Excel Graph of rate (y) against time (x) area plot, for all oxidants Graph of concentration (y) against time (x) scatter plot, for all oxidants, made in R Any figure of a new environmental situation you create, and a brief explanation of lessthan 100 words of how you used the model creatively. These are in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable Where \\(K_{O_{x}}\\) is the general term for the half saturation constant of any oxidant, for example \\(K_{O_{2}}\\), \\(K_{SO_{4}}\\) etc.↩ "],["M3_1.html", "Module 3: Climate Modeling", " Module 3: Climate Modeling Energy Balance Models Objectives To construct a simple energy balance climate model for the earth in Excel To understand the role of greenhouse gases, and incorporate them into an energy balance climate model Module resources There are no module resources needed for these exercises! Case Study 1: A “Zero-Dimensional” Energy Balance Model Here, we assume that the Earth is a sphere with uniform surface and no differences with latitude and longitude (i.e. everything receives the same amount of solar energy). We also assume that there is a balance, or equilibrium, between incoming short wavelength solar radiation absorbed by the ground and outgoing long wavelength radiation emitted by the ground. To simplify the model further, we assume the Earth emits outgoing (longwave) radiation like a “blackbody”, i.e. it is a perfectly efficient radiator - it gives off the maximum amount of radiation that an object of its temperature can emit. Outgoing Radiation The rate of the outgoing radiant energy (Joules per second = Watts) from a blackbody is given by the Stefan-Boltzmann equation: \\[\\begin{equation} E = \\sigma T^{4} \\tag{9} \\end{equation}\\] Where, \\(\\sigma\\) = Stefan-Boltzmann constant (5.67x10-8), and \\(T\\) = Temperature (in degrees Kelvin). However, for the Earth, this is being emitted over the full surface area of the Earth: \\[\\begin{equation} E_{\\text{out}} = \\sigma 4\\pi r^{2} T^{4} \\tag{10} \\end{equation}\\] Where, \\(r\\) = Radius of the Earth (in m). Incoming Radiation The energy absorbed by the earth is given by the amount of incoming solar radiation which is not reflected due to albedo. However, we have to take into account that solar energy is striking the Earth as a parallel beam of circular cross-section. So this incoming beam of radiation hits only a single “disc” of the Earth’s surface at any one time. This area has a surface area \\(\\pi r^{2}\\). \\[\\begin{equation} E_{\\text{abs}} = S\\pi r^{2} (1-a) \\tag{11} \\end{equation}\\] Where, \\(S\\) = incoming solar radiation: the “solar constant” (1367 W/m2) . Exercises Using the concept of an energy balance (i.e. energy in = energy out), rearrange the equations to find the Earth’s temperature, \\(T\\). In Excel, construct a simple spreadsheet and fill in the blank cells of Table 1 to calculate the mean temperature of the Earth using the equation from Q1, assuming an albedo of 0.33 (including in °C and °F): The current mean temperature of the Earth is 288K (15°C). Does this simple model over or under predict the Earth’s temperature? What important factor is missing from this model? Table 1: Fill in the blank cells to calculate the mean temperature of the Earth. Parameter Value Units Solar constant 1367 W/m2 Albedo 0.33 No Units Stefan-Boltzmann constant 5.67e-08 No Units Mean temperature of Earth K Mean temperature of Earth °C Mean temperature of Earth °F Remember: \\(K = °C + 273.2\\) and \\(°F = 1.8°C + 32\\) Test the sensitivity of this model to the choice of albedo. Using values from 0.3 to 0.7 in Table 2, calculate and plot T (°C) Table 2: Test the sensitivity of this model. Albedo Solar constant Assumed Albedo Stefan-Boltzmann constant \\(T\\) (˚C) 0.3 1367 0.33 5.67e-08 0.4 1367 0.33 5.67e-08 0.5 1367 0.33 5.67e-08 0.6 1367 0.33 5.67e-08 0.7 1367 0.33 5.67e-08 Case Study 2: A “Quick Fix” To try to reduce the error in the model estimates of Earth’s temperature, we can “parameterise” the model using observed or experimentally derived relationships between outgoing radiation and temperature. One such example is: \\[\\begin{equation} E_{\\text{out}} = x + yT \\tag{12} \\end{equation}\\] Where, \\(x = 204\\) W/m2, and \\(y = 2.17\\) W/m2/°C. This gets inputted into the energy balance equation (energy in = energy out) to give: \\[\\begin{equation} \\pi r^{2} S (1-a) = 4\\pi r^{2}(X+yT) \\tag{13} \\end{equation}\\] Exercises Solve the above equation for \\(T\\) (note, this time, \\(T\\) is in CELSIUS!) Set up a spreadsheet to estimate \\(T\\) for a range of albedo values. Different amounts of glacial ice cover on the Earth could produce albedos from 0.3 for minimal ice to 0.7 for a complete ice cover (this might seem unrealistic, but geologists have recently found evidence to suggest that the Earth was completely ice-covered during Neoproterozoic time 700 million years ago – a “snowball Earth”!) Are your results reasonably close for the present-day Earth mean temperature? What is the sensitivity of this model to small changes in albedo? Expanding a bit from your model (you might need to consider smaller steps in albedo), at what value of albedo do you think this simplified Earth would experience strong positive feedback involving ice cover, albedo, and mean temperature, and therefore move rapidly toward “snowball Earth” with albedo = 0.7? Could it ever be deglaciated? Table 3: Estimate \\(T\\) for a range of albedo values. Albedo x y \\(T\\) (˚C) 0.3 204 2.17 0.4 204 2.17 0.5 204 2.17 0.6 204 2.17 0.7 204 2.17 Case Study 3: Incorporating Greenhouse Gases This model is a modification of the one described by Harte (1988). He showed that it is appropriate, based on the physics of radiation (as water is the major absolver of terrestrial radiation), to divide the Earth’s atmosphere into a lower layer (from the surface to 1.8km altitude, containing 20% of the air and 50% of the water vapour) and an upper layer (containing 80% of the air and 50% of the water vapour). This time we require three energy-balance equations: For the Earth-atmosphere system as a whole; For the upper layer of the atmosphere; For the lower layer of the atmosphere. In this model, all energy terms are expressed as long-term average fluxes, all temperatures are absolute. We assume that emissivity = 1 except at the surface, and (most importantly) that each of the three systems is in equilibrium. Table 4: Energy balance model of Earth’s atmosphere. Parameter Description Value \\(S_{\\text{av}}\\) Solar radiation intercepted by Earth (\\(=\\frac{S}{4}\\) where \\(S\\) is the solar constant of 1370Wm-2) 342.5 Wm-2 \\(W\\) Heat generated from nonrenewable energy sources (fossil fuels + nuclear) 0.021 Wm-2 \\(L\\) Average latent heat flux from the surface 80 Wm-2 \\(H\\) Average sensible heat flux at the surface 17 Wm-2 \\(\\sigma\\) Stefan-Boltzmann constant 5.67 x10-8 Wm-2 deg-4 \\(a_{p}\\) Planetary albedo 0.3 \\(k_{u}\\) Fraction of solar radiation absorbed in upper layer of atmosphere 0.18 \\(k_{l}\\) Fraction of solar radiation absorbed in upper lower of atmosphere 0.075 \\(\\varepsilon\\) Emissivity (= 1 - reflectivity): the fraction of the infrared radiation emitted by the surface that is absorbed in the atmosphere and then re-emitted 0.95 \\(F_{u}\\) Infrared flux from upper layer (use black-body equation) \\(\\varepsilon \\sigma T_{u}^{4}\\) \\(F_{l}\\) Infrared flux from lower layer (use black-body equation) \\(\\varepsilon \\sigma T_{l}^{4}\\) \\(F_{s}\\) Infrared flux from surface (use black-body equation) \\(\\varepsilon \\sigma T_{s}^{4}\\) Exercise 1 Using the chart above, draw the model yourself by hand, incorporating all fluxes. We can now formulate the three energy-balance equations needed: Energy-balance for the Earth-atmosphere system as a whole: Energy enters the Earth–atmosphere system from above at the rate \\(S\\) and from below at the rate \\(W\\) (heat generated from nonrenewable energy sources: nuclear and fossil fuels). Energy leaves these the system by three routes: Reflected solar radiation: \\(a_{p}S_{av}\\); Thermal radiation from the top of the atmosphere: \\(\\sigma T_{u}^{4}\\); and The portion of thermal radiation from the surface that is not absorbed in the atmosphere: \\((1 − \\varepsilon)\\sigma T_{s}^{4}\\). Here: \\(\\varepsilon\\) is the fraction of surface radiation absorbed in the atmosphere (emissivity), \\(\\sigma\\) is the Stefan-Boltzmann constant, and, \\(T_{u}\\) is the surface temperature (absolute). Thus, the energy balance for the whole system is: \\[\\begin{equation} S_{av} + W = a_{p}S_{av} + \\sigma T_{u}^{4} + (1 − \\varepsilon)\\sigma T_{s}^{4} \\tag{14} \\end{equation}\\] Energy-balance for the upper layer of the atmosphere: The upper atmospheric layer absorbs a fraction, \\(k_{u}\\), of the solar radiation that strikes it and also receives: Energy radiated upward from the lower layer: \\(\\sigma T_{l}^{4}\\), and, One-half of the latent heat that accompanies evaporation from the surface (because this layer holds one-half the atmospheric water vapour): \\(0.5L\\). The upper layer loses energy by thermal radiation upward to outer space and downward to the lower layer. Thus, the energy balance for the upper layer is: \\[\\begin{equation} k_{u}S_{av} + \\sigma T_{l}^{4} + 0.5L = 2\\sigma T_{u}^{4} \\tag{15} \\end{equation}\\] Energy-balance for the lower layer of the atmosphere: Energy enters the lower atmospheric layer from above as absorption of a fraction, \\(k_{l}\\), of the solar radiation that enters it and as thermal radiation from the upper layer: \\(\\sigma T_{u}^{4}\\). From below, energy enters from: The absorbed portion of thermal radiation from the surface: \\(\\varepsilon \\sigma T_{s}^{4}\\); One-half the latent-heat flux from the surface: \\(0.5L\\); The sensible-heat flux from the surface, \\(H\\); and The anthropogenic heat flux: \\(W\\). Energy is lost from this layer by upward and downward radiation. The energy balance for the lower layer is therefore: \\[\\begin{equation} k_{l}S_{av} + \\sigma T_{u}^{4} + \\varepsilon \\sigma T_{s}^{4} + 0.5L + H + W = 2\\sigma T_{l}^{4} \\tag{16} \\end{equation}\\] Exercise 2 Solve these equations to find a formula for surface temperature \\(T_{s}\\): Equations (14) to (16) are a system of three equations in three unknowns: the temperatures \\(T_{l}\\), \\(T_{u}\\), and \\(T_{s}\\). The other quantities are parameters whose values must be given. The values of temperatures can be found via the following steps: Rearrange Equation (14) for \\(\\sigma T_{u}^{4}\\) in terms of \\(T_{s}\\) and parameters. Rearrange Equation (15) for \\(\\sigma T_{l}^{4}\\) in terms of \\(T_{u}\\) and parameters. Substitute the results of step 1 into the results of step 2 to give an equation for \\(\\sigma T_{l}^{4}\\) in terms of \\(T_{s}\\) and parameters. Rearrange Equation (16) for \\(\\varepsilon\\sigma T_{s}^{4}\\) in terms \\(T_{l}\\), \\(T_{u}\\), and parameters. Put the results of steps 1 and 3 into the results of step 4 and simplify to give the equation for \\(T_{s}\\) as a function of parameters: \\[\\begin{equation} T_{s} = [\\frac{(3-3a_{p}-2k_{u}-k_{l})S_{av}-1.5L-H+2W}{(3-2\\varepsilon)\\sigma}]^{\\frac{1}{4}} \\tag{17} \\end{equation}\\] Show your workings! Using the values given in Table 4, what value do you derive for \\(T_{s}\\)? How close is this to the actual value of 290K? Exercise 3 Using Excel, test the sensitivity of this model to albedo. Compare your findings to those found in Case Study 1 (a plot of \\(T_{s}\\) for values of albedo between 0.3 and 0.7 might help here). Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the Harte 1-D Energy Balance Model, including key explaining the terms. Clear photograph or page scan of your handwritten workings of the Harte Model calculations, with a clear answer of \\(T_{s}\\), the Earth’s temperature. Summary plot from Case Study 1, 2 &amp; 3 assessing albedo and temperature of the three models, with a brief explanation of less than 150 words of which model you prefer. The submission is to be all together in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded. General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable References "],["M4_1.html", "Module 4: Ocean Acidification", " Module 4: Ocean Acidification Objectives Calculate the carbonate species distribution given pH and CO2 (gas) Build a double-log plot based on a range of pHs Calculate the pH change and CaCO3 solubility given an increased atmospheric CO2. Replot other published data for comparison with our data Overview In this exercise, we create a simple model of the ocean, with a limited number of state variables. We examine the chemical interactions that result from atmospheric CO2 gas dissolving in water, along with calcium salts in the ocean fed by erosion of minerals on the land. The key overall process is that dissolved CO2 and Ca2+ are in equilibrium with solid CaCO3 (limestone). Figure 4: Bleached coral (foreground) and normal coral (background). CC BY 3.0, https://en.wikipedia.org/w/index.php?curid=32829631 The major variables are given in Table 5. Given any two of the variables on the left hand column, the other four can be calculated. Table 5: Major variables \\(CO_{2 (\\text{gas})}\\) \\(CO_{2 (\\text{dissolved})}\\) \\(H^{+}\\) \\(Ca^{2+}\\) \\(HCO_{3}^{-}\\) \\(OH^{-}\\) \\(CO_{3}^{2-}\\) \\(H_{2}CO_{3}\\) \\(C_{T} \\text{ (total dissolved inorganic carbon)}\\) \\(H_{2}CO_{3}^{*}\\) \\(\\text{Alkalinity}\\) Module resources Download the Excel spreadsheet and R files for this module by clicking the download button in the tool bar . You can use either Excel or R for this module. Exercise 1 In the first exercise, we set pH to be 8.3 and atmospheric CO2 gas to be 3.5×10-4 atmospheres, and calculate the other variables based on these two. CO2 gas dissolves in water according to Equation (18). The dissolved CO2 easily dissociates into carbonic acid according to Equation (19). For simplicity, we will go straight from atmospheric CO2 to H2CO3*, which is the sum of dissolved CO2 and carbonic acid, using Equation (20). \\[\\begin{align*} {CO}_{2(\\text{gas})}&amp;\\rightleftarrows{CO}_{2(\\text{dissolved})} \\tag{18} \\\\ {CO}_{2(\\text{dissolved})}+H_2O&amp;\\rightleftarrows H_2{CO}_3 \\tag{19} \\\\ {CO}_{2(\\text{gas})}+H_2O&amp;\\rightleftarrows \\color{#ED7D31}{H_2CO_3^\\ast} \\hspace{3em} K_{H} = 3.39×10^{-2} \\tag{20} \\\\ \\end{align*}\\] The carbonic acid dissociates into a hydrogen ion (H+, or proton) and a bicarbonate ion (HCO3-), according to Equation (21). The bicarbonate further dissociates into carbonate (CO32-) and another hydrogen ion, as shown in Equation (22). The release of these two hydrogen ions is what creates the acidity of the ocean. \\[\\begin{align*} \\color{#ED7D31}{H_2CO_3^\\ast} &amp;\\rightleftarrows \\color{#00B050}{HCO_3^-}+\\color{#FF0000}{H^+} \\hspace{3em} K_{1} = 5×10^{-7} \\tag{21} \\\\ \\color{#00B050}{HCO_3^{-}} &amp;\\rightleftarrows \\color{#5B9BD5}{{CO}_3^{2-}}+\\color{#FF0000}{H^+} \\hspace{3em} K_{2} = 5×10^{-11} \\tag{22} \\\\ \\end{align*}\\] Total carbon, \\(C_{T}\\), is defined as the sum of these carbonate species. Alkalinity is defined as the sum of the charged carbonate species and the balance of hydrogen ions and hydroxide (OH-), as shown in Equations (23) and (24). (Remember that alkalinity is the opposite of acidity.) \\[\\begin{align*} C_T&amp;=\\left[\\color{#00B050}{{HCO}_3^-}\\right]+\\left[\\color{#5B9BD5}{{CO}_3^{2-}}\\right]+\\left[\\color{#ED7D31}{H_2{CO}_3^\\ast}\\right] \\tag{23} \\\\ \\left[Alk\\right]&amp;=\\left[\\color{#00B050}{{HCO}_3^-}\\right]+2\\left[\\color{#5B9BD5}{{CO}_3^{2-}}\\right]+\\left[{OH}^-\\right]-\\left[\\color{#FF0000}{H^+}\\right] \\tag{24} \\\\ \\end{align*}\\] The concentration of hydroxide can be found by rearranging Equation (25) to Equation (26) and using the dissociation constant of water, \\(K_W\\), and the hydrogen ion concentration. \\[\\begin{align*} [OH^{-}][\\color{#FF0000}{H^{+}}] &amp;= K_{W} \\hspace{3em} K_{W} = 1×10^{-14} \\tag{25} \\\\ [OH^{-}]&amp;=\\frac{K_{W}}{[\\color{#FF0000}{H^{+}]}} \\tag{26} \\\\ \\end{align*}\\] Open the Excel spreadsheet or R project and examine the tab or script Initial CO2. The chemical equations and constants are given to you already. The variables that we are forcing to be constant in Excel are coloured grey. Enter the equations for Exercise 1 into the yellow boxes. If we assume that calcium ion concentration does not vary much in this system, we can force it to be 5×10-4 mol L-1. Calcium carbonate (CaCO3) precipitation or dissolution is governed by the ratio (\\(\\mathrm{\\Omega}\\)) of Ca2+ concentration and CO32- concentration to the solubility constant, \\(K_{sp}\\), according to Equations (27) and (28). If is greater than 1, then precipitation is favourable, and conversely, if is less than 1, dissolution is favourable. \\[\\begin{align*} {CO}_3^{2-} &amp;+{Ca}^{2+}\\rightleftarrows CaCO_3 \\hspace{3em} K_{sp} = 1\\times 10^{-8.4} \\tag{27} \\\\ \\mathrm{\\Omega} &amp;=\\frac{[Ca^{2+}][CO_{3}^{2-}]}{[K_{sp\\space CaCO_{3}}]} \\tag{28} \\\\ \\end{align*}\\] Have a good think about this: given these CO2 and pH, did your calculations lead to a system that favours CaCO3 dissolution or precipitation? Exercise 2 In this exercise you will construct a double-logarithmic plot of this system, holding CO2 constant and varying the pH. Go to the second tab in Excel and copy the equations over from the first tab. Or in R, you can run a for loop to calculate the different concentrations for each of the different pHs. Then you will have some of the major variables converted to logarithms. Next you can make an x y scatter plot. If you add the data correctly, you should get a plot that looks like Figure 5. Figure 5: Double logarithmic plot of the equilibrium composition of seawater in our model. Adapted from Stumm and Morgan (1996). Exercise 3 This is the cool part. Here we are going to calculate a new pH given an increased atmospheric CO2 concentration. Given that we calculated the concentrations of all the other species according to the initial distribution in Exercise 1, we now hold them all constant, while increasing CO2 and calculating H+ (and therefore pH). This is not simple, because H+ concentration is tightly bound up with the concentrations of all other species, and so we cannot simply work backwards from any one equation alone. However, there is a quadratic Equation (29) that we can solve for H+ , using a fixed \\(C_{T}\\), rearranged to Equation (30). \\[\\begin{align*} {\\left[\\color{#FF0000}{H^+}\\right]^2C}_T &amp;=\\color{#ED7D31}{H_2{CO}_3^\\ast}\\left(\\left[\\color{#FF0000}{H^+}\\right]^2+K_1\\left[\\color{#FF0000}{H^+}\\right]+K_1K_2\\right) \\tag{29} \\\\ \\left[\\color{#FF0000}{H^+}\\right] &amp;=\\sqrt[2]{\\frac{\\color{#ED7D31}{H_2{CO}_3^\\ast}}{C_T}\\left(\\left[\\color{#FF0000}{H^+}\\right]^2+K_1\\left[\\color{#FF0000}{H^+}\\right]+K_1K_2\\right)} \\tag{30} \\\\ \\end{align*}\\] Solving this quadratic would be fiendishly difficult. Instead, we will use trial and error, otherwise known as our iterative solution. We will do this to find a value for H+ that is the same on both sides of the equation. Go to the third tab and copy over all of the equations from Exercise 1. The grey boxes are the values that we will hold constant, and the first guess for H+, based on the H+ in Exercise 1. You can alter the CO2 concentration using the CO2 multiplier cell and your rapidly developing Excel and R skills. If you want to double CO2 concentration, type 2 into the multiplier cell. If you want to keep it at present levels, type 1. Repeat the calculation of Equation (30) over successive iterations, using the answer from the previous iteration as your guess for the next iteration. Eventually, the difference between your guesses will become very small and you can settle on a constant pH. (This is roughly how equilibrium-solving computer programs solve complex biogeochemical interactions, often with many more interacting variables than this.) Don’t forget that your successive iterations, are not time steps, like we had in previous weeks. Rather, they are just guesses at the right number that only exist in the model. Your final answer is the only one that has a real scientific meaning. If you want to determine the pH over a range of CO2 concentrations, you will need to repeat the calculation over ~10 rows, and save your results each time. Big questions: if you increase CO2, does the pH rise or fall? Does CaCO3 precipitation become more or less favourable if CO2 increases? Exercise 4 Last exercise! In this exercise, we will extract someone else’s data from their plot and make our own plot. Go to the IPCC website and read about CO2 predictions and CaCO3 precipitation. Save their Figure 10.24 as an image file or download it here. Figure 6: Changes in global average surface pH and saturation state with respect to aragonite in the Southern Ocean under various SRES scenarios. Go to the Plot Digitizer website and download the program. Open the IPCC image in Plot Digitizer. The program guides you through the steps you need to take: read the command at the bottom of the screen (for example, “Choose most negative end of x-axis”) and click “Done” when you have finished. It will be easiest if you make a point every 10 years. Save each dataset as a separate csv file and then combine the results in one sheet. If your x-axis points line up nicely enough, you can re-plot the data. Compare these results with your own results. And make any plots that you feel help explain the environmental system behaviour. Which factors cause the differences between your results and those of the IPCC models? Submission Submit properly formatted graphs and tables of the following sections of the lab: Double log plot. Any number of plots that compare your Exercise 3 results with the IPCC data. The submission is to be all together in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded. General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable References "],["M5A_1.html", "Module 5a: Catchment Water Balance Submission", " Module 5a: Catchment Water Balance Objectives To understand a two-store catchment water balance model and implement within Excel or R. Using the supplied parameters and input data, run the model and plot changes in water stores and key hydrological fluxes. The Water Balance Approach A water balance equation can be used to describe the flow of water in and out of a “system”. A system can be one of several hydrological domains depending on the context, such as a column of soil or a catchment basin. In the context of catchment, we assume the catchment area has a known ‘average’ depth, and the amount of soil is the catchment area multiplied by the depth. We treat this soil volume as our catchment ‘bucket’, and then estimate the inputs (rainfall) and outputs (evapotranspiration, runoff and baseflow). Based on our understanding of soil physics, flow processes and transpiration, we can further partition water within the bucket into different sub-compartments. In this exercise we assume the catchment bucket can include a saturated and unsaturated layer, and even an optional deeper groundwater system. The water balance assumes an initial amount of water and then we sequentially estimate the fluxes of water as outlined below in the conceptual diagram. Figure 7: Conceptual model schematic of the 0D ‘bucket’ by Yasmina Elshafei and Matthew Hipsey, adapted from Farmer et al. (2003). Note that \\(R_g\\) and deep groundwater store \\(S_{gw}\\) are depicted here as an optional extension and not included in the exercise. Module resources Download the Excel spreadsheet and R files for this module by clicking the download button in the tool bar . You can use either Excel or R for this module. Update 26-Aug : Note the R is temporarilly out of date, so please use Excel Water Balance Model Open the spreadsheet or RStudio project. Make sure that there are three sections in each: Inputs, Equations and Plotting. Draw your own version of the diagram above, label all of the variables and note the storage, evaporation and flows. 1. Date Have a quick look at the date. In Excel, the date takes the first four columns of the WATER BALANCE sheet. In RStudio, there is a section in the Inputs script called #DATE. Run the section line by line and you will learn how to make dates. Then delete the comments at the end of the section. 2. Climate Navigate to the CLIMATE sheet. As boundary conditions, we have a precipitation dataset, and a function (Equation (31)) to simulate potential evaporation (Figure 8). In Excel, the precipitation is in a column and has a value for every day. The potential evaporation is harder to get hold of. So we use a sine wave function, \\(sin()\\), that takes an annual potential evaporation rate (e.g. 1.5m/yr) and makes a daily potential evaporation value that increases during summer and decrease in winter. Inspect, then copy this formula down the page. In RStudio, the rainfall is given by a text file ’Precipitation.txt’. You will have to download this text file, tell RStudio the location where you have saved the data, and then load the data into your project. Finally, in the equations, you can convert the precipitation dataset into a matrix. The parameters for the potential evaporation function are in Inputs, and the equation is in the Equations script. Look for the #CLIMATE FORCING sections. Calculating Daily \\(e_p\\) : Daily potential evaporation will be calculated using a sine wave, as follows: \\[\\begin{equation} e_{p(\\text{daily})}=\\ \\frac{e_{p(\\text{annual})}}{365}\\left[1+A\\ \\textbf{sin}\\left\\{B\\left(m-1\\right)+d\\right\\}+C\\right]\\ \\tag{31} \\end{equation}\\] where, \\(A_{sin}\\) is the height of the sine wave (i.e. maximum less minimum value), \\(B\\) is the frequency of the sine wave, \\(C\\) is the minimum \\(e_{p(\\text{daily})}\\) (i.e. in mid-winter), \\(d\\) is the day of the month, and \\(m\\) is the month number. Figure 8: Potential evaporation sine wave function over time. 3. Storages Start to write in the equations for storage (WATER BALANCE sheet), using the equations given in the Equations section of this module. The first is \\(S_{tot}\\) which is the total water in the two stores, \\(S_{sat}\\) and \\(S_{us}\\). Note that there are two variables that have a prime (\\(\\prime\\)) sign. These are interim storage values estimated so that we can use them for our IF statements to check for whether runoff or percolation should occur.. You may have to convert between storage volumes (m3) and heights (m) by multiplying or dividing by area (m2). In Excel, there is an initial condition in a box given for you at time step 0. Your equations will start at time step 1. Your whole set of equations will not be finished until you have also completed the evaporation and flows, but you have to start somewhere. In RStudio, the initial condition is given in the Inputs section with the square brackets and the [1] (time step 1) and the loop starts at time step 2. For the equations, use the sequence that is given. The code reads from top to bottom so it is important that if a variable is referred to in an equation, it must already have been calculated in a previous line of code. Pay careful attention to the indices for \\(t\\) and \\(t-1\\). In Excel, the timestep advances as you go down the page. The notation \\(t\\) could refer to any timestep, with \\(t-1\\) simply being the timestep before \\(t\\), and \\(t+1\\) being the timestep after \\(t\\). If an equation is written entirely in terms of \\(t+1\\) (e.g. \\(X^{t+1}= Y^{t+1}+Z^{t+1}\\)), it can be simplified to be written just in terms of \\(t\\) (e.g. \\(X^{t}= Y^{t}+Z^{t}\\)). This is because \\(t\\) is arbitrary and we’re just referring to the same timestep for the entire equation. 4. Actual evapotranspiration Type in the evapotranspiration equations. Use the previous time step storage values to calculate these. We are computing the water evaporating from trees tapping into groundwater (\\(e_v\\)) and from the unsaturated zone (\\(e_{bs}\\) and \\(e_{ag}\\)) 5. Flows Type in the flow equations, baseflow, infiltration excess runoff and runoff that occurs when the bucket is full. 6. Plots When you have finished filling in all the columns, create some plots to explore the model. Consider a stacked-area plot of the two stores (\\(S_{sat}\\) and \\(S_{us}\\)), and the evaporation components. Look at the fluxes like percolation and baseflow. Play with the parameters and see what happens. Notation Forcing/Limiting Variables \\(P\\) = precipitation (m/d) \\(e_p\\) = potential evaporation (m/d) \\(A_c\\) = catchment area (m2) Storage Variables \\(S_{(t)}\\) = total volume of water stored in catchment at time \\(t\\) (m3) \\(S_{max}\\) = maximum storage capacity of bucket/ catchment (m3) \\(S_{fc}\\) = threshold storage i.e. storage at field capacity (m3) \\(S_{us}\\) = water storage in unsaturated zone (m3) \\(S_{sat}\\) = water storage in saturated zone (m3) \\(S_{gw}\\) = water storage in deep store (m3) \\(f_c\\) = threshold storage parameter i.e. 0 &lt; \\(f_c\\) &lt; 1 (dimensionless) \\(\\theta_{fc}\\) = field capacity (dimensionless) \\(\\theta_{pwp}\\) = permanent wilting point (dimensionless) \\(\\varphi\\) = porosity (dimensionless) \\(D\\) = soil depth from bottom (m) \\(D_{ebs}\\) = effective depth of influence from the bottom of the saturated zone for bare soil evaporation (m) \\(D_{eag}\\) = effective depth of influence from the bottom of the saturated zone for agricultural crop evaporation (m) \\(S_{us(fc)}\\) = current unsaturated zone field capacity (m3) ET Variables/Fluxes \\(e_t\\) = total evapotranspiration at time \\(t\\) (m/d) \\(e_v\\) = transpiration (m/d) \\(e_{v(sat)}\\), \\(e_{v(us)}\\) = transpiration of deep rooted vegetation from saturated and unsaturated zone, respectively (m/d) \\(e_{bs}\\) = bare soil evaporation (m/d) \\(e_{bs(sat)}\\) , \\(e_{bs(us)}\\) = bare soil evaporation from saturated and unsaturated zone, respectively (m/d) \\(e_{ag}\\) = agricultural crop evapotranspiration (m/d) \\(LAI\\) = leaf area index (dimensionless) \\(M\\) = % of catchment covered by deep rooted vegetation (dimensionless) \\(C\\) = % of catchment covered by shallow rooted agricultural crops (dimensionless) \\(k_v\\) = vegetation transpiration efficiency (dimensionless) \\(K_s\\) = saturated hydraulic conductivity (dimensionless) \\(\\alpha_{ebs}\\) = bare soil evaporation scaling factor (dimensionless) \\(\\alpha_{eag}\\) = agriculture evaporation scaling factor (dimensionless) Flow Variables/Fluxes \\(Q_t\\) = total runoff at time \\(t\\) (m/d) \\(Q_{se}\\) = saturation excess surface runoff (m/d) \\(Q_{ss}\\) = subsurface runoff (m/d) \\(Q_{bf}\\) = base flow (m/d) \\(R_p\\) = daily percolation \\(S_{us} \\rightarrow S_{sat}\\) (m/d) \\(R_g\\) = daily recharge \\(S_{sat} \\rightarrow S_{gw}\\) (m/d) \\(\\alpha\\), \\(\\beta\\) = recession coefficients for subsurface flow from saturated zone \\(\\alpha_{bf}\\), \\(\\beta_{bf}\\) = recession coefficients for subsurface flow from groundwater store Maximum Storage Capacity of the Bucket/Catchment Already completed in WATER BALANCE \\[\\begin{equation} S_{max}=D\\left(\\varphi-\\ \\theta_{pwp}\\right) A_c \\tag{32} \\end{equation}\\] The theoretical maximum storage capacity of the catchment is calculated by taking the difference between the porosity of the catchment soil (i.e. a measure of the total pore space in the soil, and hence, its ability to store water) and the permanent wilting point of the soil (the point at which volumetric water content is too low to be extracted from the soil by plants) and multiplying it by the volume of the catchment (i.e. surface area multiplied by the depth of the catchment). Note that \\(S_{max}\\) is the sum of \\(S_{us}\\) and \\(S_{sat}\\), and does not include \\(S_{gw}\\). Note that ‘plant available water’ is the water content difference between field capacity and permanent wilting point of the soil at any given depth. Threshold Storage Already completed in WATER BALANCE \\[\\begin{equation} f_c=\\ \\left(\\frac{\\theta_{fc}-\\ \\theta_{pwp}}{\\varphi-\\ \\theta_{pwp}}\\right) \\tag{33} \\end{equation}\\] Field capacity is the point at which all pore space small enough to retain water against the pull of gravity are filled (Brady and Weil, 1999). It is essentially the remaining water content of the soil after the removal of water by the downward forces of gravity over a daily time period. Field capacity therefore assumes that the water removed from the soil profile is only removed by gravity, not through plant suction or evaporation. The above formula calculates the threshold storage parameter as the proportion of ‘plant available water’ over storage capacity of the soil at any given depth. \\[\\begin{equation} S_{fc}=\\ S_{max} f_c \\tag{34} \\end{equation}\\] The volumetric water storage at field capacity is therefore the theoretical maximum storage capacity of the catchment multiplied (or limited by) the threshold storage parameter (which is ≤ 1). Water Table Depth The water table depth is calculated with the following equation: \\[\\begin{equation} WT^{t}= \\frac{S_{sat}^{t}}{A_{c}\\varphi} \\tag{35} \\end{equation}\\] Water Balance \\[\\begin{equation} S_{tot}^{t+1}= S_{tot}^{t}+(P^{t+1}- e_{tot}^{t+1})A_{c} - Q_{tot}^{t+1} \\tag{36} \\end{equation}\\] Water storage at any given time step, \\(t\\), is calculated using the previous time step’s water storage as a starting point (\\(t\\)). Inflows and outflows of water from the system/ bucket are then incorporated to obtain the next consecutive value of \\(S\\). Precipitation recorded in the previous time step (inflow) is added to the initial storage value, whilst total evapotranspiration and total runoff in the previous time step (outflows) are both subtracted. Total water storage is made up of water stored in the saturated and unsaturated zones. Note that the initial value of \\(S_{tot}\\) may be empirically determined or assumed to be a certain value. The initial value of \\(S_{sat}\\) is taken to be \\(D\\) less the depth from the surface to the water table, which can be measured. \\[\\begin{equation} S_{us}^{t+1}=\\ S_{tot}^{t+1^\\prime}-\\ S_{sat}^{t+1} \\tag{37} \\end{equation}\\] \\[\\begin{equation} S_{us(fc)}^{t+1}=\\ f_c\\left(S_{max}-\\ S_{sat}^t\\right) \\tag{38} \\end{equation}\\] Threshold storage in the unsaturated zone is simply the maximum potential storage capacity in the unsaturated zone multiplied (limited) by the threshold storage parameter. \\[\\begin{equation} S_{us}^{t+1^\\prime}=\\ S_{us}^t+\\ P^{t+1} A_{c} \\tag{39} \\end{equation}\\] \\[\\begin{equation} R_p^{t+1}=\\ S_{us}^{{t+1}^\\prime}-\\ S_{us(fc)}^{t+1} , \\text{if}\\ \\ \\ S_{us}^{{t+1}^\\prime}&gt;\\ S_{us(fc)}^{t+1} \\tag{40} \\end{equation}\\] Equation (40) is an IF Statement. The daily recharge rate from the unsaturated zone to the saturated zone is calculated as water storage in the unsaturated zone in the present time step, in addition to precipitation that has occurred in the current time step, less the threshold storage of the unsaturated zone (i.e. water which does not drain due to the downward forces of gravity alone). Recharge of this nature only occurs in the event that the combination of precipitation in the current time step and water storage in the unsaturated zone in the present time step is greater than the threshold field capacity of the unsaturated zone. \\[\\begin{equation} S_{sat}^{t+1}=\\ S_{sat}^t+\\ R_p^{t+1}-\\ Q_{ss}^{t+1}-\\ e_{v}^{t+1}A_{c} \\tag{41} \\end{equation}\\] Note the use of “\\(t+1\\)” on the Right Hand Side for \\(R\\), \\(Q\\) and \\(e\\) will be on the same row since they are computed based on yesterday’s \\(S\\). The balance of volumetric water storage in the saturated zone is therefore calculated as the previous period’s storage plus any recharge from the unsaturated zone, less outflows including recharge to groundwater, subsurface runoff, and total evapotranspiration (bare soil, deep rooted vegetation and agricultural crop) from the saturated zone. Total Evapo-transpiration \\[\\begin{equation} e_{tot}^t=\\ e_v^t+\\ e_{bs}^t+\\ e_{ag}^t \\tag{42} \\end{equation}\\] Total evapotranspiration (ET) of the system is the sum of ET from deep rooted native vegetation, bare soil and agricultural crops in the catchment. Native vegetation ET is calculated as follows. Simple form: \\[\\begin{equation} e_v^{t+1}= M \\frac{S_{tot}^t}{S_{max}} k_v e_p^{t+1} \\tag{43} \\end{equation}\\] Agricultural/Shallow Root Crop Evapotranspiration For evapotranspiration by agricultural crops, we make the assumption that they can draw water from the unsaturated zone only, thus: \\[\\begin{equation} e_{ag}^{t+1}=C \\alpha_{eag}[\\frac{S_{us}^t}{S_{max}-S_{sat}^t}]e_{p}^{t+1} \\tag{44} \\end{equation}\\] Bare Soil Evaporation \\[\\begin{equation} e_{bs}^{t+1} = \\left\\{\\begin{matrix} (1-M-C)e_p^{t+1},\\ \\ &amp;S_{sat}^t\\geq\\varphi D_{ebs} A_c \\\\ (1-M-C)\\left[\\frac{S_{us}^{t}}{S_{max} - S_{sat}^t}\\right]e_p^{t+1},\\ \\ &amp;S_{sat}^t&lt;\\varphi D_{ebs} A_c \\end{matrix}\\right. \\tag{45} \\end{equation}\\] This is an IF statement. In Excel split this equation up into the ‘TRUE’ and ‘FALSE’ columns. Flows \\[\\begin{equation} Q_{tot}^t = Q_{se}^t + Q_{ie}^t + Q_{ss}^t \\tag{46} \\end{equation}\\] Total runoff of the system is the sum of saturation excess, infiltration excess, subsurface runoff, and (optional) base flow. \\[\\begin{equation} Q_{se}^t = \\left\\{\\begin{matrix} {S}_{tot}^{t \\prime}-\\ S_{max},\\ \\ &amp;{S}_{tot}^{t \\prime}&gt;S_{max} \\\\ 0,\\ \\ &amp;{S}_{tot}^{t \\prime}\\le S_{max} \\end{matrix}\\right. \\tag{47} \\end{equation}\\] Saturation excess is simply taken as being zero to the extent that water storage in the bucket/ catchment is less than maximum storage capacity. In the event that total water storage exceeds maximum capacity however, any excess is taken to be surface runoff. \\[\\begin{equation} Q_{ie}^t = \\left\\{\\begin{matrix} (P^t-I_{max})A_C,\\ \\ &amp;{P^t}&gt; I_{max} \\\\ 0,\\ \\ &amp;{P^t}\\le I_{max} \\end{matrix}\\right. \\tag{48} \\end{equation}\\] Subsurface flow: \\[\\begin{equation} Q_{ss}^{t+1} = \\left\\{\\begin{matrix} 0,\\ \\ &amp;S_{sat}^{t}\\le S_{usfc}^{t+1} \\\\ \\alpha_{s}\\frac{S_{sat}^t}{S_{max}}\\ \\ &amp;S_{usfc}^{t+1} &lt;\\ S_{sat}^t \\end{matrix}\\right. \\tag{49} \\end{equation}\\] Subsurface runoff is taken to be zero in cases where the total water storage is less than field capacity threshold (i.e. thus will not drain due solely to the forces of gravity). In the event that total storage in the bucket/ catchment is greater than threshold storage and less than maximum storage capacity, subsurface runoff is taken as a nonlinear function using the excess above threshold storage and the assigned recession coefficients. Submission Submit properly formatted graphs and tables of the following sections of the lab: Stacked area plot of water storage over time Plot of \\(Q_{ie}\\) (infiltration excess runoff) and precipitation (on a secondary axis) over time Plot of \\(Q_{ss}\\) (subsurface runoff) and precipitation (on a secondary axis) over time Stacked area plot of \\(e_{v}\\), \\(e_{bs}\\), \\(e_{ag}\\) (i.e., total evaporation) over time In less than 100 words write an answer to: What is the general trend of rainfall over the long term? What is the general trend of storage over the long term? Why does the storage vary over the short term? Which flow mechanism contributes the most to the stream? What is the dominant ET flux? These are in PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable "],["M5B_1.html", "Module 5b: Land Use and Nutrient Management", " Module 5b: Land Use and Nutrient Management Objectives To setup a nutrient export model to compare the effect of Best Management Practices (BMP’s) on nutrient loads from a catchment with mixed land use. Model Overview Consider a catchment basin with with different types of land use. The daily streamflow through the catchment, \\(Q^t\\) (m3/day), can be approximated based on the daily rainfall (\\(R\\)) - see the Water Balance model in Module 5a. The phosphorus concentration in the water, \\(P^{t}\\) (g/m^3), depends on how much flow there is (i.e. more flow = more fertilizer leaching). To model this we use a simple power law to make a “flow-concentration relationship”, which is computed for each land-use (\\(P\\) is proportional to \\(\\alpha Q^{\\beta}\\)). If you’ve not seen a power law, sketch a graph of C (y-axis) vs Q (x-axis) for a value of \\(\\beta =1\\). What happens if \\(\\beta =2\\) or \\(\\beta =0.5\\)? This is averaged over the different land use fractions (denoted with the small \\(p\\) index), using the land-use fraction \\(F_p\\): \\[\\begin{equation} P^{t} = \\sum_{p=4}^{N_{p}} F_{p}\\left (\\color{#FF0000}{\\alpha_{p} \\left (\\frac{Q^{t}}{A_{c}} \\right )^{\\beta_{p}}+P_{0}} \\right ) \\tag{50} \\end{equation}\\] where alpha (\\(\\alpha\\)) and beta (\\(\\beta\\)) are variables that govern the stream \\(P\\) concentration (g/m3) as a function of area-averaged flow rate (\\(Q/A\\)) and they depend on the dominant land use (\\(p\\)). \\(N_p\\) is the number of land use classes being considered (4) and \\(P_0\\) is the background concentration (g/m3) for that sub-catchment (i.e. the value of PO4 when flow is low 0). \\(\\color{#FF0000}{\\alpha_{p} \\left (\\frac{Q}{A_{c}} \\right )^{\\beta_{p}}+P_{0}}\\) is the flow dependent concentration of the p-th land use type. The total \\(P\\) export load is \\(P_{load}\\) (g/day) and is the mass flux through the river (remember load = flow x concentration) : \\[\\begin{equation} P_{load}^{t} = P^{t} Q^{t} \\tag{51} \\end{equation}\\] Module Resources The Excel spreadsheet for this module is part of the Module 5 download. Access using the download button in the tool bar . Exercises Building the model Draw by hand the conceptual model of this system. Confirm with the person beside you what index means (\\(t\\) and \\(p\\)). Use your Module 5a water balance model to predict the catchment flows. Tailor that model to use the information as outlined in Table 6 below and supplied rainfall data in the CLIMATE sheet. Input a value for each parameter within the range given for now. Table 6: Parameters for the individual catchments. Parameters for catchment model: Catchment value Sub catchment area, \\(A\\) (km2) 50 Soil depth, \\(D\\) 10 Baseflow coefficient, \\(\\alpha_s\\) (range) 5e3 to 5e4 Field capacity, \\(\\theta_{fc}\\) (range) 0.08 to 0.15 Infilt. capacity, \\(I_{max}\\) (range) 0.01 to 0.3 Deep rooted vegetation fraction, \\(M\\) (range) 0.42 to 0.65 Crop vegetation fraction, \\(C\\) (range) 0.25 to 0.4 Starting storage, \\(S_{0}\\) 1.05E+08 \\(Ssat_{0}\\) 94500000.00 Calibrating the model Let’s make sure the model flows are realistic. Let’s compare our prediction with some observed data: Manually adjust the catchment model parameters (see possible ranges in table below) until the model best matches the observed data - the observed flow data and water table data is in the CLIMATE sheet. This processed is called “calibration”. Check this by using a regression plot of the given total observed streamflow and the model total streamflow, checking to get the highest R2 value. Note the catchment area of the WATER BALANCE model needs to match the details in the table. Make a copy of the sheet to make a duplicate model with tailored parameters Calculate phosphate concentrations Now let’s work out the land-use specific stream \\(P\\) concentrations: Predict the catchment river \\(P\\) concentrations and total export load, \\(P_{load}\\). The best way to do this is first predict the \\(P\\) concentration of each land-use class each as a column (i.e. Dairy \\(P\\) concentration, Wheat \\(P\\) concentration and so on), and then sum the 4 columns for \\(P^t\\) by factoring the (\\(F_p\\)) for each land-use. Table 7: Phosphate parameters. Parameters for P conc.: \\(\\alpha\\) (alpha) \\(\\beta\\) (beta) land-use \\(F_p\\) Landuse parameters: irrigated dairy (\\(p\\)=1) 2.1 0.90 0.30 Landuse parameters: wheat (\\(p\\)=2) 1.2 0.45 0.10 Landuse parameters: urban (\\(p\\)=3) 1.9 0.80 0.15 Landuse parameters: forest (\\(p\\)=4) 0.5 1.20 0.45 See how dairy has the highest alpha? This means it produces the most \\(P\\) of all 4 classes. Calculate phosphate export load Compute the \\(P_{load}\\) at the catchment outlet in kg/day. Also, work out the cumulative load (this will come in handy to coampre scenarios; we call it a mass curve) Consider 2 management scenarios Finally, let’s run 2 management scenarios: 7a) Scenario 1: If the total urban area expanded to 50% (0.5), how would this affect the overall \\(P\\) export? Change the land use fractions manually. They still have to add up to 1, so change the other parts as you see appropriate, i.e. urban area usually comes at the expense of forest, but you can decide how to change the landscape. Record your changed fractions. 7b) Scenario 2 If the irrigated dairy industry were made to contain their flows (i.e. prevent high \\(P\\) concentrations going to the stream), how would this affect the overall concentration in the water at the river basin outlet? The total concentration has to be maintained at 0.065 g m3 or below. Use an IF statement. Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the Catchment system. Plot of calibration regression plot, including a trendline, equation and R2 value. Include in the caption what parameter values you gave the catchment. Plot of the cumulative phosphorous export of the urban expansion management scenario (Scenario 1) compared to the original, over time. Add scenario 2 to the above plot also. Any other interesting plots you may like to create. These are in a PDF format, combined with 5a results. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable "],["M6_1.html", "Module 6: River Pollution", " Module 6: River Pollution Objectives To setup an “advection-dispersion-reaction” equation for a river system to demonstrate the combination of temporal and spatial finite differencing, in one dimension. Advection-Dispersion Reaction Mixing in environmental waters is described based on the currents and turbulence in the water - in simple terms we refer to these as advection and dispersion. The advection-dispersion reaction equation for the concentration of a substance \\(C\\), is defined as: \\[\\begin{equation} \\frac{\\delta C}{\\delta t} = D_{d}\\frac{\\delta^{2} C}{\\delta x^{2}} - u \\frac{\\delta C}{\\delta x} + S + R \\tag{52} \\end{equation}\\] where the left hand side (LHS) is the “unsteady” term (\\(C\\) change in time), the first term on the right hand side (RHS) is the dispersion/mixing term, the second term on the RHS is the advection/movement term and \\(S\\) is a source term and \\(R\\) is a reaction term. We use a partial deriviative (“curly \\(\\delta\\)”) since \\(C\\) is now varying in both space and time. In this exercise we numerically solve the 1-dimensional, advective-dispersive transport of oxygen in a river. To solve this equation numerically, we must “discretise” the partial derivatives using finite difference methods, here done according to the FTCS scheme (refer to lecture!): \\[\\begin{equation} \\frac{C^{t+1}_{x}-C^{t}_{x}}{\\Delta t}=D_{d} \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}-u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}+R_{x}+S_{x} \\tag{53} \\end{equation}\\] Where the \\(t\\) subscript is referring to timestep, and the \\(x\\) subscript refers to the space increment/position. For the case of oxygen we assume that \\(R\\) is accounting for oxygen input from the atmosphere and consumption by bacteria (called the Biochemical Oxygen Demand, BOD), then: \\[\\begin{equation} R_x=k_a\\left(C_a-C_x^t\\right)-k_{BOD}C_x^t \\tag{54} \\end{equation}\\] Where the first term is atmospheric exchange (\\(k_a\\) is the rate of re-aeration and \\(C_a\\) is the saturation value of oxygen) and the second term is the bacterial consumption (described by \\(k_{BOD}\\) which is in units of day-1). We can solve for the forward timestep at any position along the river by computing: \\[\\begin{equation} \\small{C_{x}^{t+1}=\\color{#898989}{C_{x}^{t}}+ \\left [ \\color{#3A88FE}{D_d \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}}-\\color{#FF2600}{u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}} + \\color{#77BB41}{k_{a}(C_{a}-C_{x}^{t})}-\\color{#B18CFE}{k_{BOD}C_{x}^t} \\right ]\\Delta t+\\color{#D58400}{S_{x}}} \\tag{55} \\end{equation}\\] Previous \\(C\\) concentration: \\(\\color{#898989}{C_{x}^{t}}\\) Diffusion: \\(\\color{#3A88FE}{D_d \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}}\\) Advection: \\(\\color{#FF2600}{u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}}\\) Atmospherical exchange: \\(\\color{#77BB41}{k_{a}(C_{a}-C_{x}^{t})}\\) Biological O2 demand: \\(\\color{#B18CFE}{k_{BOD}C_{x}^{t}}\\) O2 source/sink: \\(\\color{#D58400}{S_{x}}\\) To solve this the user specifies the initial oxygen concentration (\\(C_0\\)), river velocity (\\(u\\)) as a function of distance, grid length (\\(L\\)), grid spacing (\\(\\Delta x\\)), simulation period (\\(T\\)), time step (\\(\\Delta t\\)). The calculation should then compute the change in oxygen as a function of distance and time. Extra sources or sinks of oxygen can by added into the domain based on the \\(S\\) term. We will first set up the model to have no \\(S\\) inputs along the side of the river, but in the last task we add a low oxygen discharge somewhere along the river (ie. a pipe outflow). Module Resources Download the Excel spreadsheet and R files for this module by clicking the download button in the tool bar . You can use either Excel or R for this module. Exercises Setting up the Model Draw the schematic of the conceptual model by hand, showing the spatial discretisation, boundaries, sources, reactions, and a little animal swimming in the river. Start with the provided spreadsheet or R script, and implement the above expression. Set up the spreadsheet to assume a river of length (\\(L\\)) ~5 km. You will need to select an \\(x\\) increment (\\(\\Delta x\\)). In Excel, time is going down the rows and distance (space) is going along the columns. Set the initial condition (\\(C_0\\)) row to be 10 mg O2/L – i.e. the whole river starts at 10 mg/L in each cell. Once you see the formula is working in the first time-step, then copy the formula along the length of the river. You will need to set a downstream boundary condition (at the the position where \\(x = L\\), the last column). For this we will set a “zero-derivative” condition \\(– \\frac{\\delta C}{\\delta x} = 0\\). Therefore \\(C_n = C_{n-1}\\), where \\(n\\) is the last cell of the river length. Copy the first time row down for all the time-steps (simulate several days in total). Plot the oxygen concentration as a function of distance for several times during the simulation. Modelling a Wastewater Plume Implement at \\(x \\approx 1500\\text{m}\\) a wastewater plume entering the river – do this by reducing the \\(C\\) at the relevant \\(x\\) cell by 3 mg/L (or less if the \\(C\\) is already below 3). This is done by adding the extra “\\(S\\)” term of -3 to the appropriate \\(x\\)-cell formula, and copying the formula down through time. Plot and note how the oxygen recovers downstream of the low oxygen inflow plume. Use an IF statement. O2 concentration cannot be negative, so set a minimum concentration of 0 mg/L Figure 9: Advection and dispersion of O2 in a river of length \\(x\\). Note, in this figure \\(W_c\\) refers to our wastewater plume (click here for image source). Modelling an O2 Drop Change the upstream boundary concentration at \\(x = 0\\), to include a sudden drop in oxygen for a period of 0.5 hour. Plot how this signal propagates through the river domain during and after the period where the upstream condition drops – can you see the low oxygen pulse moving through the river? How does this concentration profile vary if the diffusivity is different? Modelling your own Scenario Create your own environmental scenario using this model, make a brief description of it, calculate a result and if necessary, express the result with a figure. If you see fluctuating negative and positive concentrations, you might have numerical instability. Adjust your \\(\\Delta t\\) or \\(\\Delta x\\). Figure 10: A plume of coloured dye dispersing through a river. Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the river with all the oxygen transport processes labelled. A plot of oxygen concentration at several times plotted for all distance of the river. A plot of oxygen concentration at several points of the river plotted for all time. A plot of the oxygen concentration with the upstream boundary drop at several points of the river plotted for all time. A plot of the oxygen concentration with the wastewater plume at several times plotted for all distance of the river. A plot of your own individual environmental scenario. Don’t plot too many lines – only several are necessary and use your judgement to select how many show the results well whilst the plot still clear and easy to understand. Make sure your axes are well labelled and clear to read. If abbreviating oxygen, include a subscript in O2. These are in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable "],["M7_1.html", "Module 7: Lake Ecosystem Dynamics", " Module 7: Lake Ecosystem Dynamics Objectives To use the GLM model to investigate water quality modelling in lakes and to incorporate a coupled hydrodynamic-biogeochemical model. Module Resources Download the GLM files for this module by clicking the download button in the tool bar . Setting up GLM Running GLM on macOS Open the Terminal application on your Mac Use the cd (change directory) command to navigate to the Kinneret97 folder In Finder, go to the macGLM folder and right-click on the glm app, select Show Package Contents Enter the Contents folder then the MacOS folder, and locate the glm executable file Back in terminal, enter the file path for this executable file - you can do this by dragging/dropping the file into the terminal Leave a space after the file path and type --xdisp Press Enter and the model will open Your Mac may block opening GLM the first time you run it. If this occurs, go to your Security options inside System Preferences and click ‘Open Anyway’. Running GLM on Windows On Windows, the model can be run using a batch-file glm.bat, which you can double click from in the Kinneret97 directory. The .bat file calls the GLM model from the current working directory. If the model is not opening make sure you’re not working in a network directory (e.g. OneDrive) and the file path to the glm.bat file has zero spaces in it. Running GLM in RStudio If you want to use RStudio, open the R Project, then each of the R files: Get started.R, Change parameters.R and Plot.R. Run the lines in Get started.R - it will download all the R packages from the internet, as well as an old version of GLM. To get the latest version of GLM, paste the winGLM folder into the place where R has saved its old version of winGLM, for example, H:/My Documents/R/win-library/3.4/GLMr/extbin/winGLM. After that you can drive the model and plot everything using the other two scripts. GLM will not run on any versions of R newer than 4.0 Configuring Model Parameters To configure the model, open the glm3.nml file in the Kinneret97 directory with a text editor. A chunk of this .nml file is shown below. For example, if you wanted to change the maximum number of lake layers the model simulates, you would change max_layers = 500. The easiest way to edit the glm3.nml file is with the Atom text editor. You can download it here. .sourceCode { max-height: 400px; overflow-y: auto !important; background-color: inherit; } !------------------------------------------------------------------------------! ! ! ! .----------------. .----------------. .----------------. ! ! | .--------------. || .--------------. || .--------------. | ! ! | | ______ | || | _____ | || | ____ ____ | | ! ! | | .&#39; ___ | | || | |_ _| | || ||_ \\ / _|| | ! ! | | / .&#39; \\_| | || | | | | || | | \\/ | | | ! ! | | | | ____ | || | | | _ | || | | |\\ /| | | | ! ! | | \\ `.___] _| | || | _| |__/ | | || | _| |_\\/_| |_ | | ! ! | | `._____.&#39; | || | |________| | || ||_____||_____|| | ! ! | | | || | | || | | | ! ! | &#39;--------------&#39; || &#39;--------------&#39; || &#39;--------------&#39; | ! ! &#39;----------------&#39; &#39;----------------&#39; &#39;----------------&#39; ! ! ! !------------------------------------------------------------------------------- !------------------------------------------------------------------------------- ! general model setup !------------------------------------------------------------------------------- &amp;glm_setup sim_name = &#39;Example Kinneret GLM Simulation&#39; max_layers = 500 min_layer_vol = 0.025 min_layer_thick = 0.15 max_layer_thick = 1.50 density_model = 1 / Exercises Lake Stratification The simulation in the Kinneret97 directory is an example 40m deep, monomictic lake that is used to supply drinking water and support an active fishery. Before running the model, open the file glm3.nml in a text editor and inspect the model setup etc. This file is the main configuration file that drives the model. The file glm3.nml has several key sections in it related to the model domain and parameters, the sources of boundary condition data, and details of outputs. Scan the parameters, e.g. number of layers, light extinction coefficient, mixing coefficient etc. Once the model has run, you can inspect the results. There are three ways to look at output: Via the time-depth contour plots that appear during the run (configured via plots.nml) Further information on the daily water and energy balance is in the output file lake.csv Time series values of selected state variables (e.g. temperature, salinity, etc…) can be requested for a specific depth (depth above bottom) – this is setup in &amp;outputs (eg. WQ_5.csv) Draw a schematic picture of the lake, the relevant boundary conditions (both related to water fluxes and energy fluxes). Identify and open the boundary condition input files - these are csv files containing time-series of meteorological information, and inflow and outflow volumes. These files can be opened in Excel or a text-editor. Find where these files are called from within glm3.nml. Plot the lake water balance – volume, water level and fluxes including inflows, outflows, rainfall and evaporation (refer to columns in lake.csv, and copy the appropriate data into your own excel spreadsheet). Figure 11: Schematic diagram of water balance components. Plot the surface heat fluxes such as shortwave, longwave, sensible heat latent heat (refer to columns in lake.csv). Figure 12: Schematic diagram of surface heat fluxes impacting lake water temperature. For a description of the heat flux terms refer to the GLM paper Go to the &amp;output section of glm3.nml and customize the configuration to make two output files, one at 5m from the bottom (ie. in the lake hypolimnion) and one at 35m from the bottom (ie. in the lake epilimnion). This create two .csv files (WQ_5.csv and WQ_35.csv) with conditions at these water depths. Plot the temperate of the two layers in excel. Identify the periods where the lake is stratified and mixed. !------------------------------------------------------------------------------- ! format for output and filename(s) !------------------------------------------------------------------------------- &amp;output out_dir = &#39;output&#39; out_fn = &#39;output&#39; nsave = 6 !This will output every 6 hours ! General summary file csv_lake_fname = &#39;lake&#39; ! Depth specific outputs csv_point_nlevs = 2 csv_point_fname = &#39;WQ_&#39; csv_point_at = 5.,35. csv_point_nvars = 4 csv_point_vars = &#39;temp&#39;,&#39;salt&#39;,&#39;PHS_frp&#39;,&#39;NIT_amm&#39; / Assess how the degree of stratification changes as the initial water level of the lake is reduced by 20m. To do this change the initial starting lake depth and profile details in glm3.nml. You will need to update the output depth of your surface output file. For future activities make sure you change back to 43m. The Ecosystem Model The Kinneret97 model simulation above has the ecological model aed2 enabled. It has been pre- configured to run the customizable AED modules. These are separate models, but have been set up to run side by side. They are configured using the text file aed2.nml. The above simulation was only plotting temperature and salinity and these plots were configured in plots.nml. Open plots.nml to see how you can customise the graphs. There are many other variables we may be interested in plotting when we run the watter quality model such as oxygen, nutrients, and algae. A pre-configured file called plots_aed2.nml has been created. To use this file, rename it to plots.nml (you’ll first need to rename the existing plots.nml) and run the model. You should now see more outputs for the lake simulation. In plots.nml the required variables are all listed, make sure the number of plots is high enough to include them all. Table 8: Water quality variables and their descriptions. Description Variable Name Passive tracer TRC_tr1 Water age TRC_age Suspended solids NCS_ss1 Dissolved oxygen OXY_oxy Dissolved inorganic carbon CAR_dic pH CAR_pH Methane (dissolved) CAR_ch4 Methane (bubbles) CAR_ch4_bub Reactive Silica SIL_rsi Ammonium NIT_amm Nitrate/Nitrite NIT_nit Phosphate PHS_frp Particulate inorganic phosphorus PHS_frp_ads Dissolved organic carbon OGM_doc Particualte organic carbon OGM_poc Dissolved organic nitrogen OGM_don Particulate organic nitrogen OGM_pon Dissolved organic phosphorus OGM_dop Particulate organic phsophorus OGM_pop Green algae PHY_green Green algae PHY_green_IN Green algae PHY_green_IP Diatoms PHY_diatom Diatoms PHY_diatom_IN Diatoms PHY_diatom_IP Cyrptophytes PHY_crypto Cyrptophytes PHY_crypto_IN Cyrptophytes PHY_crypto_IP Zooplankton ZOO_zoo01 Let’s also now add water quality variables to the specific depth output files (i.e. WQ_5.csv). To do so we must edit the output section of the glm3.nml file, by adding the variables as extra columns to the .csv file that were configured above. If they are there already, make sure that the number of variables is high enough to include them all. ol > li > ol > li {list-style-type:lower-alpha} As an example to output water quality variables, let’s plot all the nitrogen variables. Change csv_point_vars to include NIT_amm, NIT_nit, OGM_don, OGM_pon, PHY_green_IN - these are all the variables that contribute to the total nitrogen (TN) pool. Now re-run the model (e.g. Windows users double clicking glm.bat again). Once it’s run open WQ_35.csv to see these new variables and create a stacked area plot to show how the different variables contribute to TN. Create a well formatted, interesting graph of variables of your choice (for example, you may like to consider all of the phytoplankton groups or create sums of these to generate a NPZD model) to see how they interact and change over time. If any variables are much bigger or smaller than the others, then use two y-axes or multiple plots. How would these concentrations change if the air temperature increased by 2°C? (You will need to edit the met_hourly.csv file). Make sure to save with correct date format, taking note these met measurements are recorded hourly, so YYYY-MM-DD hh:mm. A pre-made version of this file can be found in bcs which is called met_1997_2004_airT2.csv. To use this file, update meteo_fl = 'bcs/met_1997_2004.csv' in the &amp;meteorology section of glm3.nml. !------------------------------------------------------------------------------- ! meteorology !------------------------------------------------------------------------------- &amp;meteorology met_sw = .true. lw_type = &#39;LW_IN&#39; rain_sw = .false. atm_stab = 0 fetch_mode = 0 !rad_mode = 1 albedo_mode = 1 cloud_mode = 4 !-- BC file details subdaily = .true. meteo_fl = &#39;bcs/met_1997_2004.csv&#39; !UPDATE THIS wind_factor = 0.9 lw_factor = 1.0 lw_offset = 0.0 !-- Parameters ce = 0.0013 ch = 0.0013 cd = 0.0013 !catchrain = .true. !rain_threshold = 0.001 !runoff_coef = 0.0 / What happens if we change the water clarity? Increase and decrease from the original value to see the response You must change the light extinction coefficient Kw (range 0-1) in the glm3.nml file. Assessing Error &amp; Sensitivity Calculate the mean absolute error in the simulation using the observed temperature data (ObservedTempData.xlsx from the data folder in Kinneret97) and the simulated temperature data (the simulated temperature data is from the surface layer in lake.csv). \\[\\begin{equation} MAE = \\frac{\\sum_{i}\\left | T_{i}^{sim}-T_{i}^{obs} \\right |}{n} \\tag{56} \\end{equation}\\] ol > li > ol > li {list-style-type:lower-alpha} Calculate the sensitivity of the modelled temperature to changes in water clarity (the light extinction coefficient, \\(K_w\\)) and wind speed (wind_factor). These can be found in glm3.nml. Try increasing and decreasing the default parameter value by 0.2 and see how much the output changes. \\[\\begin{equation} SI = \\frac{(Output_{new}-Output_{original})/Output_{original}}{(Parameter_{new}-Parameter_{original})/Parameter_{original}} \\tag{57} \\end{equation}\\] Assess how sensitive the temperature and phytoplankton biomass is to water clarity: GLM results Water clarity Decrease 0.37 Water clarity Original 0.57 Water clarity Increase 0.77 Average WQ_35 temperature Average WQ_35 phytoplankton (green, crypto, diatom) biomass Assess how sensitive the temperature and phytoplankton biomass is to wind speed: GLM results Wind Speed Decrease 0.6 Wind Speed Original 0.9 Wind Speed Increase 1.2 Average WQ_35 temperature Average WQ_35 phytoplankton (green, crypto, diatom) biomass Submission Submit properly formatted graphs and tables of the following sections of the lab: Lake Stratification: Hand drawn diagram of the lake and any variables you used Plots of the water balance Plots of the heat fluxes Plots of the temperature at different layers Plots of the shallower lake The Ecosystem Model: Hand drawn diagram of the lake with any variables you used Interesting plot of the selected variables Any results of the higher air temperature and changed water clarity Assessing Error &amp; Sensitivity: Temperature error assessment Temperature and phytoplankton sensitivity assessment Tables for submission These are to be uploaded in a word doc or PDF format. No screenshots of figures from Excel/Excel spreadsheets to be uploaded General professional formatting guidelines: All figures are to have adequate captions explaining them For graphs, figure captions go below the plot For tables, the caption goes above the table Make sure figures and their text size is readable Excel hints: When there is a caption for a plot, you remove the title Remove the plot border and gridlines Make sure both axes have visible lines and tick marks Units need to be noted properly with the axis label - ‘Temperature (°C)’ Round numbers to be reasonable "],["workshop-2.html", "Workshop 2 Visualising Module 1 Flow Data Visualising Diversion Scenarios Barcharts and Pipes Modelling Quokkas in R", " Workshop 2 Visualising Module 1 Flow Data Setting up Creating an R Studio project Open R Studio Go File -&gt; New Project -&gt; New Directory -&gt; New Project Directory name: ENVT3362_workshop_2 Create project as a subdirectory of: Wherever you store your ENVT3362 files! Click Create project Download the spreadsheet for this workshop here Move this to your ENVT3362_workshop_2 directory Install the tidyverse Type this into the R console You only need to do this once install.packages(&quot;tidyverse&quot;) Importing and formatting the data Load the necessary packages library(tidyverse) loads all the ‘core’ tidyverse packages readxl and lubridate need to be loaded separately library(tidyverse) library(readxl) library(lubridate) Import the spreadsheet The path argument is relative to you R Studio project file sheet specifies which Excel sheet to read envFlow &lt;- read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) Inspect the data head() prints the first few observations What data type is date? head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;chr&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Format the date Use lubridate’s ymd() function to overwrite the existing date variable and convert the character data to date data envFlow$date &lt;- ymd(envFlow$date) Inspect the data again Notice the change in data type of date head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;date&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Graphing with ggplot Call ggplot() ggplot() Define the data and mapping The aesthetics (aes()) provide the mapping between variables in the data and the plot’s visual properties ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) Add a geometry layer geom_ functions tell ggplot how to render each observation ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line() Change the geometry As long as the aesthetics can be mapped to the declared geometry type, ggplot will render the graph ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_point() Change the colour Colours can either be hexadecimal codes (e.g. \"#0000FF\" is blue) or one of R’s reserved colour names ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) Fix the labels ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) Change the theme ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() Customise the theme ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Save the plot File types can be changed by modifying the file extensions e.g. \"discharge.jpeg\" ggsave( filename = &quot;discharge.pdf&quot;, width = 2000, height = 2000, units = &#39;px&#39; ) Visualising Diversion Scenarios Let’s pretend our graph will be used in a report that assesses the impact of the proposed diversion scenarios. We need to visually communicate to the reader the upper and lower limits of flows that can be diverted. To do this, let’s highlight the region of the graph where environmental flows can occur under Diversion Scenario 1 (i.e. Water below 50 ML/day and above 550 ML/day is not diverted). Map the current aesthetics to geom_line() aes() can be passed to either ggplot() or a specific geom_ Aesthetics supplied to ggplot() are used as defaults for every layer ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Add a second geometry geom_rect() has two dimensions and therefore reques different aesthetic mappings ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect(mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550))+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Customise the geometry ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550), alpha = 0.25 )+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Add a legend By specifying fill inside the aesthetics, ggplot maps this information to the geom’s fill (i.e. the colour fill) Usually a grouping variable from the data would be provided here i.e. a column that classifies your data into different groups ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Customise the legend ggplot automatically assigns the colours, change this with scale_fill_manual() ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ scale_fill_manual(values = &quot;red&quot;)+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;), legend.title = element_blank() ) Move the legend ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ scale_fill_manual(values = &quot;red&quot;)+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;), legend.title = element_blank(), legend.position = &quot;top&quot;, legend.justification = &quot;right&quot; ) Save the plot ggsave( filename = &quot;dischargeDiversion1.pdf&quot;, width = 297, height = 210, units = &#39;mm&#39;, scale = 0.8 ) Barcharts and Pipes Reload the data envFlow &lt;- read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) Use pipes and mutate() to reformat the date The pipe (%&gt;%) operator takes the output from one function and makes it the input of the next Pipes can be used across the tidyverse when working with tidy data mutate() is used to add or remove variables when working with pipes This is the same as envFlow$date &lt;- ymd(envFlow$date) but it’s ‘pipeable’! envFlow %&gt;% mutate(date = ymd(date)) ## # A tibble: 6,940 × 2 ## date totalDischarge ## &lt;date&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 ## 7 1992-01-07 27.1 ## 8 1992-01-08 26.8 ## 9 1992-01-09 26.7 ## 10 1992-01-10 26.0 ## # … with 6,930 more rows Extract the years year() returns the numerical year from date formatted data envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) ## # A tibble: 6,940 × 3 ## date totalDischarge year ## &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 1992 ## 2 1992-01-02 26.8 1992 ## 3 1992-01-03 27.3 1992 ## 4 1992-01-04 27.0 1992 ## 5 1992-01-05 26.5 1992 ## 6 1992-01-06 26.8 1992 ## 7 1992-01-07 27.1 1992 ## 8 1992-01-08 26.8 1992 ## 9 1992-01-09 26.7 1992 ## 10 1992-01-10 26.0 1992 ## # … with 6,930 more rows Pipes are non-destructive Notice how envFlow is unchanged? This is useful when performing ‘data exploration’ as the original dataframe never altered head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;chr&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Group and summarise Group the data by new year column and calculate summary statistics with summarise() envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) ## # A tibble: 19 × 2 ## year totalDischarge ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1992 89538. ## 2 1993 21042. ## 3 1994 16511. ## 4 1995 31838. ## 5 1996 128586. ## 6 1997 18061. ## 7 1998 23067. ## 8 1999 19090. ## 9 2000 189366. ## 10 2001 17462. ## 11 2002 13946. ## 12 2003 39874. ## 13 2004 124288. ## 14 2005 8567. ## 15 2006 4182. ## 16 2007 5221. ## 17 2008 8418. ## 18 2009 62334. ## 19 2010 33940. Plot using geom_col() Pipe this into ggplot() Note that we don’t need to specify the data argument to ggplot() envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) Apply the previous theme envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) + labs(x=&quot;Year&quot;, y = &#39;Total Discharge (ML)&#39;)+ theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Recap read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) + labs(x=&quot;Year&quot;, y = &#39;Total Discharge (ML)&#39;)+ theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Modelling Quokkas in R Setting up Create a new R script Go File -&gt; New File -&gt; R Script Load the tidyverse library(tidyverse) Declare the constants as variables birthRate &lt;- 1 deathRate &lt;- 0.1 timestep &lt;- 1 # i.e. 1 year timeMax &lt;- 30 carryCap &lt;- 10000 Create a new data frame of the initial values A data frame is simply a table year, relativeCarryCap, quokkaRate, and quokkaRate will be created as new columns in that table Inspect model with the head() function model &lt;- data.frame( year = 1, relativeCarryCap = NA, quokkaRate = NA, quokkaPop = 5 ) head(model) ## year relativeCarryCap quokkaRate quokkaPop ## 1 1 NA NA 5 Modelling Calculate the next timestep For the next time step we’ll need to compute new values for year, relativeCarryCap, quokkaRate, and quokkaPop. These values will be appended as a new row (i.e. timestep) to the model data frame. yeartakes a value of 2 year &lt;- 2 relativeCarryCap is the result of the previous quokka population divided by the carrying capacity model$quokkaPop[1] specifies the population in the previous row (row 1) i.e. the previous time step relativeCarryCap &lt;- model$quokkaPop[1]/carryCap quokkaRate and quokkaPop are calculated in the same fashion i.e. using the constants and values in the previous row of the model data frame quokkaRate &lt;- timestep*((1-relativeCarryCap)*birthRate*model$quokkaPop[1]-(deathRate*model$quokkaPop[1])) quokkaPop &lt;- quokkaRate+model$quokkaPop[1] Next, we’ll create an identical data frame to model with our new values model_temp &lt;- data.frame( year = year, relativeCarryCap = relativeCarryCap, quokkaRate = quokkaRate, quokkaPop = quokkaPop ) head(model_temp) ## year relativeCarryCap quokkaRate quokkaPop ## 1 2 5e-04 4.4975 9.4975 We can append this time step to model by using the rbind() function model &lt;- rbind(model,model_temp) head(model) ## year relativeCarryCap quokkaRate quokkaPop ## 1 1 NA NA 5.0000 ## 2 2 5e-04 4.4975 9.4975 Speeding things up Want to repeat that process for the next 29 time steps? Probably not. Let’s create a loop that iterates through each year, calculates the new values, and appends them to the model data frame. for(i in 2:timeMax){ year &lt;- i relativeCarryCap &lt;- model$quokkaPop[i-1]/carryCap quokkaRate = timestep*((1-relativeCarryCap)*birthRate*model$quokkaPop[i-1]-(deathRate*model$quokkaPop[i-1])) quokkaPop = quokkaRate+model$quokkaPop[i-1] model_temp &lt;- data.frame( year = year, relativeCarryCap = relativeCarryCap, quokkaRate = quokkaRate, quokkaPop = quokkaPop ) model &lt;- rbind(model,model_temp) } Visualise the modelled populations with ggplot ggplot(data=model,mapping=aes(x=year,y=quokkaPop))+ geom_line()+ labs(x=&quot;Year&quot;, y=&quot;Quokka population&quot;)+ theme_light() "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
