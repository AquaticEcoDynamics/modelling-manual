[["index.html", "Environmental Dynamics Workbook Introduction", " Environmental Dynamics Workbook Matt Hipsey, Dan Paraska, Alanna Kursar, Giles Knight Last updated: 2024-08-23 Introduction Welcome to the Environmental Dynamics Workbook! This workbook supplements the practical component of the Environmental Dynamics unit and is designed to develop your ability to model environmental systems. Each practical class has a corresponding module that will be added to the workbook as the semester progresses. If you are at all unfamiliar with using Excel or R, please visit the Getting Started section of this workbook before commencing the first module. Please contact your Unit Coordinator or tutor for queries relating to this workbook, or refer to the Unit Outline on LMS for matters relating to the unit’s structure. Contents Introduction Getting Started Style Guide Module 1 - Modelling in Excel Module 2 - Biogeochemistry Module 3 - Climate Modeling Module 4 - Oceanic Acidification Module 5a - Catchment Water Balance Module 5b - Land Use and Nutrient Management Module 6 - River Pollution Module 7 - Lake Ecosystem Dynamics Final Project Learning the Tidyverse Learning the base plot Excel basics Modelling Quokkas in R References "],["GettingStarted.html", "Getting Started", " Getting Started Tools You’ll Need Excel Excel is available on all computer laboratory PC’s and can be freely downloaded to personal devices here. You should already feel confident using Excel from your previous units, however if you need further guidance please visit UWA’s resources: Getting started with Excel Using formulas and functions in Excel R To get started with R, first download the base R system onto your computer. By itself, this provides a rudimentary console for interacting with the R programming language. For a more user-friendly experience, download the R Studio integrated development environment (IDE). R can be downloaded here R Studio can be downloaded here Terminology File types In this unit you will largely be dealing with two kinds of ‘R files’: R script files (e.g. Equations.R) and, R project files (e.g. Module2Biogeochem.Rproj) R scripts are the raw instructions that tell the R programming language what to do. Meanwhile, an R Project file simply creates an independent workplace environment for you to interact with and manage your scripts. It’s wise to create a new R Project file whenever you start working on a new project. Functions and packages Just like Excel, you can interact with your data using a variety of functions in R. Functions are the tools you use to get the job done. For example, the plot() function can be used to create graphs. R is an open source programming language, meaning anyone can create their own functions and bundle them up in a collection known as a package. Comments All programming languages allow the user to write comments on their code to assist in readability and structure. In R, a comment is defined as a line beginning with a #. Any characters written after the # are ignored by R and not executed. It’s good practice to get into the habit of commenting your R code as it will likely save you (or someone else!) a lot of time later down the track. # This is a comment! library(tidyverse) # You can load packages with the library() function # Inspect your data with the head() function head(iris) # Create a graph using the ggplot() function ggplot(data = iris, mapping = aes(x = Petal.Length, y = Petal.Width, colour = Species)) + geom_point() + theme_light() To comment multiple lines of code at once in R Studio, pressCommand + Shift + Con MacOS orControl + Shift + Con Windows Further R resources If you want to learn more about R and the tidyverse packages, we recommend reading the following (free) textbooks: R for Data Science ggplot2: elegant graphics for data analysis Unzipping files Many of the module resources found in this workbook are downloaded as ‘zipped’ (i.e. compressed) files. ‘Unzipping’ (i.e. extracting) these files is simple. On MacOS, simply double click the ‘zipped’ file: On Windows, click ‘Extract All’ and follow the prompt: "],["StyleGuide.html", "Style Guide Text Figures Tables Referencing Submissions", " Style Guide Text Units Leave a space between a numeral and a unit. For example, 100 m3, not 100m3. For inverse units use a slash or a negative power, but be consistent throughout your text. For example 100 L/d or 100 L d-1. Pay attention to capital letters: there is a billion-fold difference between mL and ML (millilitres and megalitres). Do not leave a space between a numeral and %. For example, 100%, not 100 %. Capital M as a unit is known as molar. It is an abbreviation of mol L-1. mM is the same as mmol L-1, or 1 \\(\\times\\) 10-3 M. Chemicals Elements, compounds and molecules do not start with capital letters. An abbreviation or a chemical symbol has capital letters. Multiple elements in a compound have a subscript and charged molecules have a superscript. For example, carbonate, CO32-. Fonts Pick an appropriate Seriff or Sans-Seriff font with a size of 12pt. Commonly used fonts include Arial, Helvetica, Times New Roman and Garamond. Do not use stylised fonts - you know the ones! Paragraphs Format your paragraphs with the following: Line spacing: 1.5 pt Section headings: 14 pt font size and in bold Margins: 2 cm margins on all sides i.e. top, bottom, left, and right margins Use consistent approach when capatalising your headers/titles: Capitalise at least the first and last word Don’t capitalise conjunctions, prepositions, and articles (e.g. the, an, a) Figures Positioning Put the figure after it is referred to in the text for the first time, so that the figure is below. Refer to every figure and make sure the figure caption is updated to the right number. 3D Do not use 3D plots to visualise your data! They easily misrepresent data and, more often than not, look visually jarring. They can be appropriate for certain types of scatterplots or surface plots when there is a third dimension to the data. Colour Rarely are the defaults the best choice for your figure. When selecting a colour palette: Consider the saturation and brightness of your colours Be considerate of colour blindness and of how colours are commonly interpreted, i.e. if you were mapping surface temperatures you would not use red to colour the cold areas and blue for the hot Use black font and black lines for the axes Do not put a border around the figure Captions Captions are positioned below a figure and above a table. They contain a useful description to assist the interpretation of the figure or table. Do not include a title as your caption renders this redundant! Timeseries axis If you have a date axis, arrange the dates so that they can be read. Do not let them all crash into each other. If you have a timespan of many years, do not include days and months in the date tick label. For example, between 1950 and 2000, it does not matter to the reader that a point occurred on 1 January. Multipanel plots Unnecessary regressions Do not include a trendline for a series of data that you have calculated yourself. If y = 2x, and you calculate y over a series of x values, a linear regression of this calculation will give you a formula of 2x, with an r2 of 1. This regression is not helpful. Good graphs Include axis labels, with units. Use a legend if you have more than one data series. Spread your tick marks out nicely. Use black lines for the axes and black font for the text. Bad graphs The following graphs leave a lot to be desired! They misrepresent data, lack critical details, and are visually jarring. Take a look at each and read the marker’s feedback to get an idea of how your graphs will be assessed. Figure 1: Feedback: This is a graph of one number on a completely arbitrary scale We’ve been told it’s the total 3 times but not what it’s a total of! 5 decimal places! With the scale of this y-axis decimal places are serving no useful purpose here There’s no units or y-axis label and a title has been used instead of a figure caption Figure 2: Feedback: A 3D visualisation is being used for 2D data No axis labels or units Missing a legend for the two lines plotted Figure 3: Feedback: A pie chart of what? Missing units and a legend Pie charts are a poor choice of visualisation for comparing numbers. The human eye is much less able to distinguish differences of scale for data represented as sectors of a circle compared to rectangles on a bar chart Superfluous images Unless specified, your assessments are not picture books! Do not use figures to arbitrarily lengthen your report and add visual clutter. Justify the purpose of each figure you include. When used well, figures should support your writing and illustrate key points to the reader. Tables All tables must be styled as per the following: Table font size: All table information is to be in 10pt font Line spacing: Within a table, line spacing is to single line spacing Decimals: Within a table column a common decimal place format is to be used Heading separator: A single solid line is to be used to separate column headings from numbers Caption location: The table caption must be placed above the table Caption label font: The caption label is to be in 12pt font Caption label line spacing: The caption label line spacing is to be single line spacing Sub-groups: Identification of subgroups with a line is optional Pooled group: Identification of a pooled group with a dashed line is optional Referencing When completing academic work it is essential that you refer to the sources of information within your text, and professionally adhere to referencing standards. Marks will be deducted for inadequate, or poor quality referencing. Complete details of these works should be arranged alphabetically in a reference list at the end of any document or report you submit. You are permitted to use Harvard or APA reference style. The choice is up to you as long as it is used consistently throughout the document. When referring to a specific page or pages of a reference: Labaree (2006, p. 17) disputed the evidence. The findings are suppored in the literature (Labaree, 2006, p.17-18). When referring to more than one work by the same author(s): Fink and Brayman (2004, 2006) expressed similar doubts. When referring to more than one work in the same year: Research in this field has progressed rapidly (Hargreave,s 2005a) (Hargreaves 2005b). When there are two authors: There is mounting evidence of these trends (Tilbury &amp; Wortman, 2003). The study built on earlier work by Tilbury and Wortman (2003). When there are three or more authors: New research as revealed substantial differences (Leithwood et al., 1999). When referring to a publication that has no specific author, but which was written by an organization: Global concern is increasing (UNESCO, 1992). When citing 3 or more works that support the same argument: There is a strong concensus in the literature (Andrews, 2015; Brown &amp; Baldwin, 2012; Carter et al., 2016). Submissions When uploading your assessments, only submit your work in PDF format - not Word’s .docx. In Word, you can export your documents to PDF via File -&gt; Save As… -&gt; File Format -&gt; PDF -&gt; Save. "],["M1_1.html", "Module 1: Modelling in Excel", " Module 1: Modelling in Excel Environmental Flows to an Estuary Objectives Use scenario assessment to identify the impacts of water diversion on a coastal lake system. Become familiar with basic spreadsheet commands in Excel by conducting an environmental flow analysis and building a simple impact model. What are environmental flows? Lakes, rivers and estuaries are adapted to receive water based on the natural hydrological condition, but often water is required upstream for other purposes. An environmental flow is water that is provided to the environment to maintain its health and natural diversity In simple terms: Provision of water to satisfy environmental requirements for ‘healthy’ (natural) function. Environmental flows are a form of river/wetland restoration. They are sometimes referred to as “e-flows”. In the Murray-Darling Basin (MDB), a water market was established that allows for irrigation entitlements to be “traded”; e-water must be bought from the “water holder” (in this case that is the Commonwealth Environmental Water Holder, CEWH). Flow diversion case study: Robe Lakes What happens if we divert freshwater away from a coastal lake system? How much flow diversion is “acceptable”? In this exercise we use a real data-set from the Robe Lakes system in South Australia to explore this question. Figure 1: Explore the case study area with this interactive map. We can plan for e-water requirements to a highly valued system using scenario modelling, and the concept of a “flow-response model” (or flow-response relationship). In this case we look at an example in South Australia where an assessment for water diversion is being undertaken, and we seek to look at what impact this might have on the salinity of a coastal lake. In other words, if we change the flow regime, what will the response be. In this case, salinity is an environmental indicator of ecological requirements. Specifically in this example, we assess the impact of diverting water from “Drain L”, thereby reducing water to the Robe Lakes. Before we assess our diversion scenario, we must first analyse the historical flow data, to understand the historical flow regime. Module resources Download the Excel spreadsheet for this module by clicking the download button in the tool bar . Exercises You are given a time-series of daily river flow (through the Drain) and need to assess how different diversion scenarios impact the freshwater flow delivery to a down stream estuary. The steps below allow us to: “Bin” (aka categorise) the daily flow into different categories (using an IF statement) Summarise the daily flows into annual totals (using a PIVOT table) Describe the historical flow variance in terms of an exceedance probability plot Create to alternate “diversion scenarios”. These are “what-if” type scenarios where we explore what would have occurred if the diversion policy was in place. Build a simple empirical (statistical) model linking drain flow rate and estuary response - we measure response in terms of salinity. Use the empirical model to show what the salinity in the estuarine lakes would have looked like if the flow diversion policy was in place. Now that we have an overview, lets get started! Follow closely the below steps from 1 to 9. Categorise the flow into different categories. For this flow time-series, calculate the volume of daily flow within the following bands 0-40; 40-80; 80-120; 120-200; 200-400; 400-1000; &gt;1000 Use a nested IF() statement in adjacent columns to partition flows For this flow time-series, calculate the number of days of daily flow within the above bands and then work out annual average number of days. The latter is simply computed by dividing the total number of days by the number of years in the data-set. Use COUNT() to get the number of entries in the column Calculate the annual amount of flow in total and in each flow band. You may do the annual averaging manually (slow) or the pivot table method (fast). For the pivot table method: Insert a new column B, Label it Year. Type the year number into the first cell, make sure it is formatted as a number. Click two times on the little square in the corner of the box. This will fill down the page. Repeat this at each year change and you will have the year only information which you can then use to summarise data. As the original date has day numbers and decimal time each one is unique so you end up with a record for each day. This way you get a record for each year. Use YEAR() to speed this step up Highlight all the data. It must have headings for each column or it won’t work. Go to “Insert” then “Pivot Table”. Click OK as you want the default settings. Then you just fiddle until you get what you want. The following is an example: Sort the years from highest to lowest total annual flow: Add a new column next to the flows indexing the years sequentially (i.e. 1, 2, 3…) Add a new column next to the indices calculating the probability of meeting the annual flow: \\(P(Yri) = \\frac{i}{\\text{number of years}+1}\\) Create a scatter plot of the flow (y-axis) vs probability (x-axis) to create an “exceedance” curve Sum each year Flow diversion scenarios Assess the amount of water available for flow diversion for two scenarios by adding a new time-series column for each option: Water below 50 ML/day and above 550 ML/day is NOT diverted Water below 150 ML/day and above 1000 ML/day is NOT diverted Construct a nested IF() that solves the following: Add two new columns for each of the above to work out cumulative amount (running total) of diverted water \\(\\small{\\text{Cumulated Volume} = \\text{Yesterday&#39;s Total Diverted Discharge}+\\text{Today&#39;s Diverted Discharge}}\\) Assessing impacts on lake salinity You’ve now calculated the cumulative amount of water diverted under the two flow diversion scenarios. Next, let’s calculate how much water will remain in the Robe Lakes and the impact that this will have on salinity. Calculate the daily flow into the Robe Lakes for both diversion scenarios Subtract the volume of today’s diverted water from today’s inflow Look at sheet Estuary – Salinity. This records data collected at the site marked on the map with a +. You will use this data to build a simple statistical model that predicts the salinity from the drain’s daily discharge. Start by creating a scatter plot of the historical salinity (as EC) and daily discharge in the Estuary – Salinity sheet. Fit a trendline to the data and display equation and R2 – this is a statistical model. Look x/y axis, is your model predicting for salinity? In a new time-series column in the previous sheet, use the statistical model from above to predict a salinity time-series for the Robe Lakes under the two diversion scenarios compared to the base case. Submission In this exercise, we have explored the complexities of allocating water to the environment in a contested situation (i.e., where there are competing “customers” for the water resource). In particular, we can summarise environmental flows: appreciate that there is a potential conflict between e-flow vs irrigation allocation e-flow allocation is a river restoration and maintenance tool the array of benefits from e-water need to quantified and maybe site specific there is a need for identifying “Sustainable Diversion Limits” based on assessment of historical flow requirements. Submit properly formatted graphs and tables of the following sections of the lab: Q2: Table of the number of days daily flow within the above bands and annual average number of days Q3: Table of the annual amount of flow in total and in each band Q4: Table of annual flow by year with index and probability. Scatter plot of the flow vs probability curve Q6: Table of the total cumulative amount of diverted water (i.e. the last value) for both diversion scenarios Q7 &amp; 8: Scatterplot of the EC vs. daily discharge from the drain, with trendline (hint: exponential), equation and R2 value Q9: Plot of the annual average salinity timeseries of the two diversion scenarios compared to the base case In less than 100 words, discuss which is the most appropriate scenario choice for management of the estuary These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. Professional presentation of your results is important. Explore the short tutorial in the Supporting Material section to improve your data viz skills with R’s tidyverse package. "],["M2_1.html", "Module 2: Biogeochemistry", " Module 2: Biogeochemistry Bacterially Mediated Organic Matter Oxidation Rates Objectives Become familiar with basic spread sheet commands in Excel by building a simple biogeochemical model from chemical and mathematical equations. Become familiar with the program R Studio and compare it to Excel. Before you start Listen to lecture on ordinary differential equations (ODEs) Be familiar with the exponential growth of Quokkas example in Excel Review slides on sediment Modelling concepts This model has variables of concentration and rate, no spatial dimensions, and it has a dimension of time. Last week’s model had variables of volume and concentration (salinity), and was also resolved in time. In coming weeks the models will be resolved in zero, one, two or three dimensions of space, and only some will be resolved in time. Remember that a chemical reaction can be described using a simple differential equation. For the concetration of OM, we can write it as: \\[\\begin{equation} \\frac{dOM}{dt} = -R_{OM} = -k_{OM}OM \\tag{1} \\end{equation}\\] Here, \\(k_{OM}\\) is the rate of the organic matter decay reaction, in units of \\(/year\\), and \\(OM\\) is a concentration of organic matter in units of \\(mM\\). In this activity going down the rows of the Excel spread sheet means going forward in time, as the differential equations divide the time axis into hundreds of tiny little chunks (i.e., each row is a day in this weeks setup). The concentration at any point in time may depend on concentration at the previous point in time. We use the notation concentration @ t depends on concentration @ t-1. We write this by “discretizing” the equation, as: \\[\\begin{equation} OM^{t} = OM^{t-1} - (k_{OM} OM^{t-1})\\Delta t \\tag{2} \\end{equation}\\] This states that the current concentration is equal to the previous days concentration, subtract any reaction that occured over the past day. Organic matter oxidation Organic matter (dead algae, leaves etc.) is oxidised by different bacteria that use a range of oxidants. The bacteria simultaneously consume organic matter and an oxidant, in a similar way to how humans consume carbohydrate and oxygen. Scientists have observed that there is a general sequence of oxidants used, based on the energy available for each process. When all of the oxidants are consumed, methanogenesis takes place, where bacteria use the organic matter alone without any oxidant. This is similar to the lactic acid metabolic system that the human body uses when oxygen is in short supply, such as when you go for a run. Remember that methane is a reduced byproduct, not an oxidant. Other reduced by-products include N2 gas, Mn2+ and Fe2+ metal ions, and the S2- anion. We can construct a model to determine the rates at which the oxidation takes place, and use the rates to determine other processes such as oxygen consumption, denitrification or phosphate adsorption. The rate is dependent on the concentration of the organic matter, \\(\\color{#E36C0A}{OM}\\), and a rate constant, \\(\\color{#00B0F0}{k_{OM}}\\). The rate is not dependent on the concentration of the oxidant, until the oxidant concentration becomes very low: this process is included as a limitation term (With more O2 you do not become super; with less O2 you get sleepy). A Monod equation is used to limit the rate. \\[\\begin{equation} R_{O_{2}} = \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{O_{2}}{O_{2}+K_{O_{2}}}} \\tag{3} \\end{equation}\\] Figure 2: Move the slider to see the effect of changing the \\(K_{O_2}\\) value in the monod equaiton. The generally observed sequence of oxidants is modelled with an inhibition process, so that a higher energy yielding oxidant, such as oxygen, inhibits a lower energy oxidant such as iron. \\[\\begin{align*} R_{NO_{3}} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{NO_{3}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{4}\\\\ R_{Mn} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{Mn}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{5}\\\\ R_{Fe} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{Fe}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{6} \\\\ R_{SO_{4}} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#76923C}{\\frac{SO_{4}^{2-}}{SO_{4}^{2-}+K_{SO_{4}}}}\\color{#FF0000}{\\frac{K_{Fe}}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{7}\\\\ R_{Meth} &amp;= \\color{#00B0F0}{k_{OM}}\\color{#E36C0A}{OM}\\color{#FF0000}{\\frac{K_{SO_{4}}}{SO_{4}^{2-}+K_{SO_{4}}}}\\color{#FF0000}{\\frac{K_{Fe}}{Fe+K_{Fe}}}\\color{#FF0000}{\\frac{K_{Mn}}{Mn+K_{Mn}}}\\color{#FF0000}{\\frac{K_{NO_{3}}}{NO_{3}+K_{NO_{3}}}}\\color{#FF0000}{\\frac{K_{O_{2}}}{O_{2}+K_{O_{2}}}} \\tag{8}\\\\ \\end{align*}\\] Note that the total amount of \\(OM\\) decay, \\(R_{OM}\\), is the sum of the all the individual pathways listed above. In this lab, we simulate a blob of aquatic sediment. It is a closed system, so that the initial concentrations react until they reach equilibrium. This system is also perfectly mixed, with an unchanging biomass of bacteria, and so there is no spatial resolution. This allows us to focus on the chemical reactions alone. Module resources Download the Excel spreadsheet and R scripts for this module by clicking the download button in the tool bar . Exercises Building the model in Excel Looking at the sequence of equations above: what is the difference between the limitation and the inhibition term? Have a good think about this. If concentration were amazingly bigger or smaller than the \\(K_{O_{x}}\\)1, what would happen to the rates of the higher and lower energy processes? For example, with a high oxygen concentration, what would happen to the manganese reduction rate? With a low oxygen and nitrate concentration, and a high manganese concentration, what would happen to the manganese oxidation rate? Complete the Excel spreadsheet for iron reduction, sulfate reduction and methanogenesis. Oxygen, nitrate and manganese are done already, so copy the method and use the equations at the tops of the columns. It is tedious, fiddly and there is a good chance that you will introduce bugs that are hard to find. This is the nature of Excel. The rate is dependent on the concentration in the previous time step – this is called an explicit solution (as opposed to implicit). Complete the line plot (1) of relative oxidant concentration for iron and sulphate. Right click on the plot and use ‘Add data’, make the x axis time and the y axis relative concentration. It is easy to visualise if you keep the colours consistent, and choose the colours that you like. Adjust the values for the initial condition and the half-saturation constants and see how the lines move on your plot. Add more time steps underneath if you want to see what happens over the long term. Complete the area plot (2) of reaction rates, then play around with the numbers to test the sensitivities of the outputs to the parameter inputs Figure 3: Move the slider to experiment with changing the \\(K_{O_2}\\) value. Building the model in R Now the Excel spreadsheet is working, the next step is to repeat the process in R. Open the R project and the three scripts: there is one in which you set the input parameters and initial conditions; one which has the equations; and one which is used for plotting the outputs. Read through them and become familiar with what is in each. Without making any edits, run each script in sequence, starting with Inputs, then Equations, then Plotting. The plotting script should make a plot appear in the bottom right corner. You can press Cmd+Enter on MacOS, or Ctrl+Enter on Windows instead of clicking the ‘Run’ button. You’ll have noticed some parts of these scripts are incomplete (i.e. commented out with #s). Complete the model by entering the inputs, equations and plotting scripts for iron, sulfate and methanogenesis reactions, just as you did in the Excel spreadsheet. Remember that you just need a rate of methanogenesis: methane is not an oxidant like sulfate. Step 1: Enter the inputs for Iron. Don’t forget to ‘run’ these! Step 2: Write the equation. It should match Equation (6). Step 3: Graph it and repeat previous steps for the other oxidants. In the Plotting script, graph the concentrations, and relative concentrations, of each oxidant using ggplot() Now we have a working process-based model. This was the hard and boring part, but now we can be creative. So far we have established an initial condition and let it run to completion, but next we can model a hypothetical environmental situation. For example, imagine there were an oxygen fluctuation, perhaps from algal photosynthesis occurring in the day but not at night in a lake, or from the tidal movement of hypoxic water. In either Excel or R, create a new environmental situation that involves organic matter oxidation. Consider the assumptions you are making and how important they are. Use the model to test the effect of this situation on concentrations and rates. For example, what would happen if there were regular organic matter deposition as a boundary condition? Or maybe what if there were a constant oxygen concentration? What conditions might be needed to minimise methanogenesis? Be creative! Write a brief description of your new situation and create one plot (4) to explain your result. Submission Submit properly formatted graphs and tables of the following sections of the lab: Graph of relative and absolute concentration (y) against time (x) scatter plot, for all oxidants, made in Excel Graph of rate (y) against time (x) area plot, for all oxidants Graph of relative and absolute concentration (y) against time (x) scatter plot, for all oxidants, made in R Any figure of a new environmental situation you create, and a brief explanation of less than 100 words of how you used the model creatively. These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. Where \\(K_{O_{x}}\\) is the general term for the half saturation constant of any oxidant, for example \\(K_{O_{2}}\\), \\(K_{SO_{4}}\\) etc.↩︎ "],["M3_1.html", "Module 3: Climate Modelling", " Module 3: Climate Modelling Energy Balance Models Objectives To construct a simple energy balance climate model for the Earth in Excel To understand the role of greenhouse gases, and incorporate them into an energy balance climate model Before you start Listen to the energy balance lecture Module resources Download the Excel spreadsheet for this module by clicking the download button in the . Case Study 1: A “Zero-Dimensional” Energy Balance Model Here, we assume that the Earth is a sphere with uniform surface and no differences with latitude and longitude (i.e. everything receives the same amount of solar energy). We also assume that there is a balance, or equilibrium, between incoming short wavelength solar radiation absorbed by the ground and outgoing long wavelength radiation emitted by the ground. To simplify the model further, we assume the Earth emits outgoing (longwave) radiation like a “blackbody”, i.e. it is a perfectly efficient radiator - it gives off the maximum amount of radiation that an object of its temperature can emit. Outgoing Radiation The rate of the outgoing radiant energy (Joules per second = Watts) from a blackbody is given by the Stefan-Boltzmann equation: \\[\\begin{equation} E = \\sigma T^{4} \\tag{9} \\end{equation}\\] where, \\(\\sigma\\) = Stefan-Boltzmann constant (5.67x10-8), and \\(T\\) = Temperature (in degrees Kelvin). However, for the Earth, this is being emitted over the full surface area of the Earth: \\[\\begin{equation} E_{\\text{out}} = \\sigma 4\\pi r^{2} T^{4} \\tag{10} \\end{equation}\\] where, \\(r\\) = Radius of the Earth (in m). Incoming Radiation The energy absorbed by the earth is given by the amount of incoming solar radiation which is not reflected due to albedo. However, we have to take into account that solar energy is striking the Earth as a parallel beam of circular cross-section. So this incoming beam of radiation hits only a single “disc” of the Earth’s surface at any one time. This area has a surface area \\(\\pi r^{2}\\). \\[\\begin{equation} E_{\\text{abs}} = S\\pi r^{2} (1-a) \\tag{11} \\end{equation}\\] where, \\(S\\) = incoming solar radiation: the “solar constant” (1367 W/m2) . Exercises Using the concept of an energy balance (i.e. energy in = energy out), rearrange the equations to find the Earth’s temperature, \\(T\\). In Excel, construct a simple spreadsheet and fill in the blank cells of Table 1 to calculate the mean temperature of the Earth using the equation from Q1, assuming an albedo of 0.33 (including in °C and °F): The current mean temperature of the Earth is 288K (15°C). Does this simple model over or under predict the Earth’s temperature? What important factor is missing from this model? Table 1: Fill in the blank cells to calculate the mean temperature of the Earth. Parameter Value Units Solar constant 1367 W/m2 Albedo 0.33 No Units Stefan-Boltzmann constant 5.67e-08 No Units Mean temperature of Earth K Mean temperature of Earth °C Mean temperature of Earth °F Remember: \\(K = °C + 273.2\\) and \\(°F = 1.8°C + 32\\) Test the sensitivity of this model to the choice of albedo. Using values from 0.3 to 0.7 in Table 2, calculate and plot T (°C) Table 2: Test the sensitivity of this model. Albedo Solar constant Stefan-Boltzmann constant \\(T\\) (K) \\(T\\) (˚C) 0.3 1367 5.67e-08 0.4 1367 5.67e-08 0.5 1367 5.67e-08 0.6 1367 5.67e-08 0.7 1367 5.67e-08 Case Study 2: A “Quick Fix” To try to reduce the error in the model estimates of Earth’s temperature, we can “parameterise” the model using observed or experimentally derived relationships between outgoing radiation and temperature. One such example is: \\[\\begin{equation} E_{\\text{out}} = x + yT \\tag{12} \\end{equation}\\] Where, \\(x = 204\\) W/m2, and \\(y = 2.17\\) W/m2/°C. This gets inputted into the energy balance equation (energy in = energy out) to give: \\[\\begin{equation} \\pi r^{2} S (1-a) = 4\\pi r^{2}(x+yT) \\tag{13} \\end{equation}\\] Exercises Solve the above equation for \\(T\\) (note, this time, \\(T\\) is in CELSIUS!) Set up a spreadsheet to estimate \\(T\\) for a range of albedo values. Different amounts of glacial ice cover on the Earth could produce albedos from 0.3 for minimal ice to 0.7 for a complete ice cover (this might seem unrealistic, but geologists have recently found evidence to suggest that the Earth was completely ice-covered during Neoproterozoic time 700 million years ago – a “snowball Earth”!) Are your results reasonably close for the present-day Earth mean temperature? What is the sensitivity of this model to small changes in albedo? Table 3: Estimate \\(T\\) for a range of albedo values. Albedo x y \\(T\\) (˚C) 0.3 204 2.17 0.4 204 2.17 0.5 204 2.17 0.6 204 2.17 0.7 204 2.17 Case Study 3: Incorporating Greenhouse Gases This model is a modification of the one described by Harte (1988). He showed that it is appropriate, based on the physics of radiation (as water is the major absolver of terrestrial radiation), to divide the Earth’s atmosphere into a lower layer (from the surface to 1.8km altitude, containing 20% of the air and 50% of the water vapour) and an upper layer (containing 80% of the air and 50% of the water vapour). This time we require three energy-balance equations: For the Earth-atmosphere system as a whole; For the upper layer of the atmosphere; For the lower layer of the atmosphere. In this model, all energy terms are expressed as long-term average fluxes, all temperatures are absolute. We assume that emissivity = 1 except at the surface, and (most importantly) that each of the three systems is in equilibrium. Table 4: Energy balance model of Earth’s atmosphere. Parameter Description Value \\(S_{\\text{av}}\\) Solar radiation intercepted by Earth (\\(=\\frac{S}{4}\\) where \\(S\\) is the solar constant of 1370Wm-2) 342.5 Wm-2 \\(W\\) Heat generated from nonrenewable energy sources (fossil fuels + nuclear) 0.021 Wm-2 \\(L\\) Average latent heat flux from the surface 80 Wm-2 \\(H\\) Average sensible heat flux at the surface 17 Wm-2 \\(\\sigma\\) Stefan-Boltzmann constant 5.67 x10-8 Wm-2 deg-4 \\(a_{p}\\) Planetary albedo 0.3 \\(k_{u}\\) Fraction of solar radiation absorbed in upper layer of atmosphere 0.18 \\(k_{l}\\) Fraction of solar radiation absorbed in upper lower of atmosphere 0.075 \\(\\varepsilon\\) Emissivity (= 1 - reflectivity): the fraction of the infrared radiation emitted by the surface that is absorbed in the atmosphere and then re-emitted 0.95 \\(F_{u}\\) Infrared flux from upper layer (use black-body equation) \\(\\varepsilon \\sigma T_{u}^{4}\\) \\(F_{l}\\) Infrared flux from lower layer (use black-body equation) \\(\\varepsilon \\sigma T_{l}^{4}\\) \\(F_{s}\\) Infrared flux from surface (use black-body equation) \\(\\varepsilon \\sigma T_{s}^{4}\\) Exercise 1 Using the chart above, draw the model yourself by hand, incorporating all fluxes. We can now formulate the three energy-balance equations needed: Energy-balance for the Earth-atmosphere system as a whole: Energy enters the Earth–atmosphere system from above at the rate \\(S\\) and from below at the rate \\(W\\) (heat generated from nonrenewable energy sources: nuclear and fossil fuels). Energy leaves these the system by three routes: Reflected solar radiation: \\(a_{p}S_{av}\\); Thermal radiation from the top of the atmosphere: \\(\\sigma T_{u}^{4}\\); and The portion of thermal radiation from the surface that is not absorbed in the atmosphere: \\((1 − \\varepsilon)\\sigma T_{s}^{4}\\). Here: \\(\\varepsilon\\) is the fraction of surface radiation absorbed in the atmosphere (emissivity), \\(\\sigma\\) is the Stefan-Boltzmann constant, and, \\(T_{u}\\) is the surface temperature (absolute). Thus, the energy balance for the whole system is: \\[\\begin{equation} S_{av} + W = a_{p}S_{av} + \\sigma T_{u}^{4} + (1 − \\varepsilon)\\sigma T_{s}^{4} \\tag{14} \\end{equation}\\] Energy-balance for the upper layer of the atmosphere: The upper atmospheric layer absorbs a fraction, \\(k_{u}\\), of the solar radiation that strikes it and also receives: Energy radiated upward from the lower layer: \\(\\sigma T_{l}^{4}\\), and, One-half of the latent heat that accompanies evaporation from the surface (because this layer holds one-half the atmospheric water vapour): \\(0.5L\\). The upper layer loses energy by thermal radiation upward to outer space and downward to the lower layer. Thus, the energy balance for the upper layer is: \\[\\begin{equation} k_{u}S_{av} + \\sigma T_{l}^{4} + 0.5L = 2\\sigma T_{u}^{4} \\tag{15} \\end{equation}\\] Energy-balance for the lower layer of the atmosphere: Energy enters the lower atmospheric layer from above as absorption of a fraction, \\(k_{l}\\), of the solar radiation that enters it and as thermal radiation from the upper layer: \\(\\sigma T_{u}^{4}\\). From below, energy enters from: The absorbed portion of thermal radiation from the surface: \\(\\varepsilon \\sigma T_{s}^{4}\\); One-half the latent-heat flux from the surface: \\(0.5L\\); The sensible-heat flux from the surface, \\(H\\); and The anthropogenic heat flux: \\(W\\). Energy is lost from this layer by upward and downward radiation. The energy balance for the lower layer is therefore: \\[\\begin{equation} k_{l}S_{av} + \\sigma T_{u}^{4} + \\varepsilon \\sigma T_{s}^{4} + 0.5L + H + W = 2\\sigma T_{l}^{4} \\tag{16} \\end{equation}\\] Exercise 2 Solve these equations to find a formula for surface temperature \\(T_{s}\\): Equations (14) to (16) are a system of three equations in three unknowns: the temperatures \\(T_{l}\\), \\(T_{u}\\), and \\(T_{s}\\). The other quantities are parameters whose values must be given. The values of temperatures can be found via the following steps: Rearrange Equation (14) for \\(\\sigma T_{u}^{4}\\) in terms of \\(T_{s}\\) and parameters. Rearrange Equation (15) for \\(\\sigma T_{l}^{4}\\) in terms of \\(T_{u}\\) and parameters. Substitute the results of step 1 into the results of step 2 to give an equation for \\(\\sigma T_{l}^{4}\\) in terms of \\(T_{s}\\) and parameters. Rearrange Equation (16) for \\(\\varepsilon\\sigma T_{s}^{4}\\) in terms \\(T_{l}\\), \\(T_{u}\\), and parameters. Put the results of steps 1 and 3 into the results of step 4 and simplify to give the equation for \\(T_{s}\\) as a function of parameters: \\[\\begin{equation} T_{s} = [\\frac{(3-3a_{p}-2k_{u}-k_{l})S_{av}-1.5L-H+2W}{(3-2\\varepsilon)\\sigma}]^{\\frac{1}{4}} \\tag{17} \\end{equation}\\] Show your workings! Using the values given in Table 4, what value do you derive for \\(T_{s}\\)? How close is this to the actual value of 290K? Exercise 3 Using Excel, test the sensitivity of this model to albedo. Compare your findings to those found in Case Study 1 (a plot of \\(T_{s}\\) for values of albedo between 0.3 and 0.7 might help here). For which model, and at what value of albedo, do you think the Earth would experience a strong positive feedback involving ice cover, albedo, and mean temperature, and therefore move rapidly toward “snowball Earth”? Could it ever be deglaciated? Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the Harte 1-D Energy Balance Model, including key explaining the terms. Clear photograph or page scan of your handwritten workings of the Harte Model calculations, with a clear answer of \\(T_{s}\\), the Earth’s temperature. Summary plot from Case Study 1, 2 &amp; 3 assessing albedo and temperature of the three models, with a brief explanation of less than 150 words of which model you prefer. In 100 words or less, your answer to the Exercise 3 “snowball Earth” question. These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. References "],["M4_1.html", "Module 4: Ocean Acidification", " Module 4: Ocean Acidification Objectives Calculate the carbonate species distribution given pH and CO2 (gas) Build a double-log plot based on a range of pHs Calculate the pH change and CaCO3 solubility given an increased atmospheric CO2. Replot other published data for comparison with our data Before you start Review slides Overview In this exercise, we create a simple model of the ocean, with a limited number of state variables. We examine the chemical interactions that result from atmospheric CO2 gas dissolving in water, along with calcium salts in the ocean fed by erosion of minerals on the land. The key overall process is that dissolved CO2 and Ca2+ are in equilibrium with solid CaCO3 (limestone). Figure 4: Bleached coral (foreground) and normal coral (background). CC BY 3.0, https://en.wikipedia.org/w/index.php?curid=32829631 The major variables are given in Table 5. Given any two of the variables on the left hand column, the other four can be calculated. Table 5: Major variables \\(CO_{2 (\\text{gas})}\\) \\(CO_{2 (\\text{dissolved})}\\) \\(H^{+}\\) \\(Ca^{2+}\\) \\(HCO_{3}^{-}\\) \\(OH^{-}\\) \\(CO_{3}^{2-}\\) \\(H_{2}CO_{3}\\) \\(C_{T} \\text{ (total dissolved inorganic carbon)}\\) \\(H_{2}CO_{3}^{*}\\) \\(\\text{Alkalinity}\\) Module resources Download the Excel spreadsheet and R files for this module by clicking the download button in the tool bar . You can use either Excel or R for this module. Exercise 1 In the first exercise, we set pH to be 8.3 and atmospheric CO2 gas to be 3.5×10-4 atmospheres, and calculate the other variables based on these two. CO2 gas dissolves in water according to Equation (18). The dissolved CO2 easily dissociates into carbonic acid according to Equation (19). For simplicity, we will go straight from atmospheric CO2 to H2CO3*, which is the sum of dissolved CO2 and carbonic acid, using Equation (20). \\[\\begin{align*} {CO}_{2(\\text{gas})}&amp;\\rightleftarrows{CO}_{2(\\text{dissolved})} \\tag{18} \\\\ {CO}_{2(\\text{dissolved})}+H_2O&amp;\\rightleftarrows H_2{CO}_3 \\tag{19} \\\\ {CO}_{2(\\text{gas})}+H_2O&amp;\\rightleftarrows \\color{#ED7D31}{H_2CO_3^\\ast} \\hspace{3em} K_{H} = 3.39×10^{-2} \\tag{20} \\\\ \\end{align*}\\] The carbonic acid dissociates into a hydrogen ion (H+, or proton) and a bicarbonate ion (HCO3-), according to Equation (21). The bicarbonate further dissociates into carbonate (CO32-) and another hydrogen ion, as shown in Equation (22). The release of these two hydrogen ions is what creates the acidity of the ocean. \\[\\begin{align*} \\color{#ED7D31}{H_2CO_3^\\ast} &amp;\\rightleftarrows \\color{#00B050}{HCO_3^-}+\\color{#FF0000}{H^+} \\hspace{3em} K_{1} = 5×10^{-7} \\tag{21} \\\\ \\color{#00B050}{HCO_3^{-}} &amp;\\rightleftarrows \\color{#5B9BD5}{{CO}_3^{2-}}+\\color{#FF0000}{H^+} \\hspace{3em} K_{2} = 5×10^{-11} \\tag{22} \\\\ \\end{align*}\\] Total carbon, \\(C_{T}\\), is defined as the sum of these carbonate species. Alkalinity is defined as the sum of the charged carbonate species and the balance of hydrogen ions and hydroxide (OH-), as shown in Equations (23) and (24). (Remember that alkalinity is the opposite of acidity.) \\[\\begin{align*} C_T&amp;=\\left[\\color{#00B050}{{HCO}_3^-}\\right]+\\left[\\color{#5B9BD5}{{CO}_3^{2-}}\\right]+\\left[\\color{#ED7D31}{H_2{CO}_3^\\ast}\\right] \\tag{23} \\\\ \\left[Alk\\right]&amp;=\\left[\\color{#00B050}{{HCO}_3^-}\\right]+2\\left[\\color{#5B9BD5}{{CO}_3^{2-}}\\right]+\\left[{OH}^-\\right]-\\left[\\color{#FF0000}{H^+}\\right] \\tag{24} \\\\ \\end{align*}\\] The concentration of hydroxide can be found by rearranging Equation (25) to Equation (26) and using the dissociation constant of water, \\(K_W\\), and the hydrogen ion concentration. \\[\\begin{align*} [OH^{-}][\\color{#FF0000}{H^{+}}] &amp;= K_{W} \\hspace{3em} K_{W} = 1×10^{-14} \\tag{25} \\\\ [OH^{-}]&amp;=\\frac{K_{W}}{[\\color{#FF0000}{H^{+}]}} \\tag{26} \\\\ \\end{align*}\\] Open the Excel spreadsheet or R project and examine the tab or script Initial CO2. The chemical equations and constants are given to you already. The variables that we are forcing to be constant in Excel are coloured grey. Enter the equations for Exercise 1 into the yellow boxes. If we assume that calcium ion concentration does not vary much in this system, we can force it to be 5×10-4 mol L-1. Calcium carbonate (CaCO3) precipitation or dissolution is governed by the ratio (\\(\\mathrm{\\Omega}\\)) of Ca2+ concentration and CO32- concentration to the solubility constant, \\(K_{sp}\\), according to Equations (27) and (28). If is greater than 1, then precipitation is favourable, and conversely, if is less than 1, dissolution is favourable. \\[\\begin{align*} {CO}_3^{2-} &amp;+{Ca}^{2+}\\rightleftarrows CaCO_3 \\hspace{3em} K_{sp} = 1\\times 10^{-8.4} \\tag{27} \\\\ \\mathrm{\\Omega} &amp;=\\frac{[Ca^{2+}][CO_{3}^{2-}]}{[K_{sp\\space CaCO_{3}}]} \\tag{28} \\\\ \\end{align*}\\] Have a good think about this: given these CO2 and pH, did your calculations lead to a system that favours CaCO3 dissolution or precipitation? Exercise 2 In this exercise you will construct a double-logarithmic plot of this system, holding CO2 constant and varying the pH. Go to the second tab in Excel and copy the equations over from the first tab. Or in R, you can run a for loop to calculate the different concentrations for each of the different pHs. Then you will have some of the major variables converted to logarithms. Next you can make an x y scatter plot. If you add the data correctly, you should get a plot that looks like Figure 5. Figure 5: Double logarithmic plot of the equilibrium composition of seawater in our model. Adapted from Stumm and Morgan (1996). Exercise 3 This is the cool part. Here we are going to calculate a new pH given an increased atmospheric CO2 concentration. Given that we calculated the concentrations of all the other species according to the initial distribution in Exercise 1, we now hold them all constant, while increasing CO2 and calculating H+ (and therefore pH). This is not simple, because H+ concentration is tightly bound up with the concentrations of all other species, and so we cannot simply work backwards from any one equation alone. However, there is a quadratic Equation (29) that we can solve for H+ , using a fixed \\(C_{T}\\), rearranged to Equation (30). \\[\\begin{align*} {\\left[\\color{#FF0000}{H^+}\\right]^2C}_T &amp;=\\color{#ED7D31}{H_2{CO}_3^\\ast}\\left(\\left[\\color{#FF0000}{H^+}\\right]^2+K_1\\left[\\color{#FF0000}{H^+}\\right]+K_1K_2\\right) \\tag{29} \\\\ \\left[\\color{#FF0000}{H^+}\\right] &amp;=\\sqrt[2]{\\frac{\\color{#ED7D31}{H_2{CO}_3^\\ast}}{C_T}\\left(\\left[\\color{#FF0000}{H^+}\\right]^2+K_1\\left[\\color{#FF0000}{H^+}\\right]+K_1K_2\\right)} \\tag{30} \\\\ \\end{align*}\\] Solving this quadratic would be fiendishly difficult. Instead, we will use trial and error, otherwise known as our iterative solution. We will do this to find a value for H+ that is the same on both sides of the equation. \\[\\begin{equation} \\left[\\color{#FF0000}{{H^+}_{i}}\\right] = \\sqrt[2]{\\frac{\\color{#ED7D31}{H_2{CO}_3^\\ast}}{C_T}}\\left(\\left[\\color{#FF0000}{{H^+}_{i-1}}\\right]^2+K_1\\left[\\color{#FF0000}{{H^+}_{i-1}}\\right]+K_1K_2\\right) \\tag{31} \\end{equation}\\] Go to the third tab and copy over all of the equations from Exercise 1. The grey boxes are the values that we will hold constant, and the first guess for H+, based on the H+ in Exercise 1. You can alter the CO2 concentration using the CO2 multiplier cell and your rapidly developing Excel and R skills. If you want to double CO2 concentration, type 2 into the multiplier cell. If you want to keep it at present levels, type 1. Repeat the calculation of Equation (30) over successive iterations, using the answer from the previous iteration as your guess for the next iteration. Eventually, the difference between your guesses will become very small and you can settle on a constant pH. (This is roughly how equilibrium-solving computer programs solve complex biogeochemical interactions, often with many more interacting variables than this.) Don’t forget that your successive iterations, are not time steps, like we had in previous weeks. Rather, they are just guesses at the right number that only exist in the model. Your final answer is the only one that has a real scientific meaning. If you want to determine the pH over a range of CO2 concentrations, you will need to repeat the calculation over ~10 rows, and save your results each time. Big questions: if you increase CO2, does the pH rise or fall? Does CaCO3 precipitation become more or less favourable if CO2 increases? Exercise 4 Last exercise! In this exercise, we will extract someone else’s data from their plot and make our own plot. Go to the IPCC website and read about CO2 predictions and CaCO3 precipitation. Save their Figure 10.24 as an image file or download it here. Figure 6: Changes in global average surface pH and saturation state with respect to aragonite in the Southern Ocean under various SRES scenarios. Go to the Plot Digitizer website and download the program. Open the IPCC image in Plot Digitizer. The program guides you through the steps you need to take: read the command at the bottom of the screen (for example, “Choose most negative end of x-axis”) and click “Done” when you have finished. It will be easiest if you make a point every 10 years. Save each dataset as a separate csv file and then combine the results in one sheet. If your x-axis points line up nicely enough, you can re-plot the data. Compare these results with your own results. You will notice the IPCC data graphed over time. Our model depicts an increasing CO2 environment via the multiplier. The fundamental relationships between these variables is similar - an increasing CO2 world leads to increased ocean acidification and decreased pH. Remember back to Module 1 where we modelled salinity values from flow. Let’s do something similar here to predict year from our CO2, Omega, and pH. Correlate the IPCC data of CO2/Year, pH/Year, and Omega/Year (i.e. use a scatterplot and add a trendline). Use these equations to generate modelled year values for our Exercise 3 model. Compare and contrast your results with a plot each for CO2, pH, and Omega. You will need to convert atm to µatm and multiply Omega by 100 to create a percentage! Submission Submit properly formatted graphs and tables of the following sections of the lab: Double log plot. Your Exercise 3 CO2 plot comparing your modelled CO2 and Omega. Attempt to incorporate the IPCC data into this plot. In 3 plots, compare your modelled data with the IPCC data over time (CO2, pH, and Omega). In 150 words or less, which factors cause the differences between your results and those of the IPCC models. These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. References "],["M5A_1.html", "Module 5a: Catchment Water Balance Submission", " Module 5a: Catchment Water Balance Objectives To understand a two-store catchment water balance model and implement within Excel. Using the supplied parameters and input data, run the model and plot changes in water stores and key hydrological fluxes. Before you start Listen to the water balance lecture Be familiar with the connected bucket example (double buckets) in Excel The Water Balance Approach A water balance equation can be used to describe the flow of water in and out of a “system”. A system can be one of several hydrological domains depending on the context, such as a column of soil or a catchment basin. In the context of catchment, we assume the catchment area has a known ‘average’ depth, and the amount of soil is the catchment area multiplied by the depth. We treat this soil volume as our catchment ‘bucket’, and then estimate the inputs (rainfall) and outputs (evapotranspiration, runoff and baseflow). Based on our understanding of soil physics, flow processes and transpiration, we can further partition water within the bucket into different sub-compartments. In this exercise we assume the catchment bucket can include a saturated and unsaturated layer, and even an optional deeper groundwater system. The water balance assumes an initial amount of water and then we sequentially estimate the fluxes of water as outlined below in the conceptual diagram. Figure 7: Conceptual model schematic of the 0D ‘bucket’ by Yasmina Elshafei and Matthew Hipsey, adapted from Farmer et al. (2003). Note that \\(R_g\\) and deep groundwater store \\(S_{gw}\\) are depicted here as an optional extension and not included in the exercise. Module resources Download the Excel spreadsheet for this module by clicking the download button in the tool bar . Water Balance Model Open the spreadsheet and familiarise yourself with the different sheets: CLIMATE, WATER BALANCE, PHOSPHOROUS, and SCENARIOS. Draw your own version of the diagram above, label all of the variables and note the storage, evaporation and flows. 1. Date Have a quick look at the date. In Excel, the date takes the first four columns of the WATER BALANCE sheet. Note that the dates increment with each row. 2. Climate Navigate to the CLIMATE sheet. As boundary conditions, we have a precipitation dataset, and a function (Equation (32)) to simulate potential evaporation (Figure 8). In Excel, the precipitation is in a column and has a value for every day. The potential evaporation is harder to get hold of. So we use a sine wave function, \\(sin()\\), that takes an annual potential evaporation rate (e.g. 1.5m/yr) and makes a daily potential evaporation value that increases during summer and decrease in winter. Inspect, then copy this formula down the page. Calculating Daily \\(e_p\\) : Daily potential evaporation will be calculated using a sine wave, as follows: \\[\\begin{equation} e_{p(\\text{daily})}=\\ \\frac{e_{p(\\text{annual})}}{365}\\left[1+A\\ \\textbf{sin}\\left\\{B\\left(m-1\\right)+d\\right\\}+C\\right]\\ \\tag{32} \\end{equation}\\]-23) \\end{equation} where, \\(A_{sin}\\) is the height of the sine wave (i.e. maximum less minimum value), \\(B\\) is the frequency of the sine wave, \\(C\\) is the minimum \\(e_{p(\\text{daily})}\\) (i.e. in mid-winter), \\(d\\) is the day of the month, and \\(m\\) is the month number. Figure 8: Potential evaporation sine wave function over time. 3. Storages Start by copying your precipitation (\\(P\\)) and potential evaporation values from your CLIMATE sheet to your WATER BALANCE - 5a sheet. Next, type in the forumulas for storage using the equations given in the Equations section of this module. Take a look at \\(S_{tot}\\) (Equation (37)) which is the total water in the two stores, \\(S_{sat}\\) and \\(S_{us}\\). Note that there are two variables that have a prime (\\(\\prime\\)) sign. These are interim storage values estimated so that we can use them for our IF statements to check for whether runoff or percolation should occur.. In Excel, there is an initial condition in a box given for you at time step 0. Your equations will start at time step 1. Your whole set of equations will not be finished until you have also completed the evaporation and flows, but you have to start somewhere. In Excel, the timestep advances as you go down the page. The notation \\(t\\) could refer to any timestep, with \\(t-1\\) simply being the timestep before \\(t\\), and \\(t+1\\) being the timestep after \\(t\\). If an equation is written entirely in terms of \\(t+1\\) (e.g. \\(X^{t+1}= Y^{t+1}+Z^{t+1}\\)), it can be simplified to be written just in terms of \\(t\\) (e.g. \\(X^{t}= Y^{t}+Z^{t}\\)). This is because \\(t\\) is arbitrary and we’re just referring to the same timestep for the entire equation. 4. Actual evapotranspiration Type in the evapotranspiration equations. Use the previous time step storage values to calculate these. We are computing the water evaporating from trees tapping into groundwater (\\(e_v\\)) and from the unsaturated zone (\\(e_{bs}\\) and \\(e_{ag}\\)) 5. Flows Type in the flow equations, baseflow, infiltration excess runoff and runoff that occurs when the bucket is full. 6. Plots When you have finished filling in all the columns, create some plots to explore the model. Consider a stacked-area plot of the two stores (\\(S_{sat}\\) and \\(S_{us}\\)), and the evaporation components. Look at the fluxes like percolation and baseflow. Play with the parameters and see what happens. Notation Forcing/Limiting Variables \\(P\\) = precipitation (m/d) \\(e_p\\) = potential evaporation (m/d) \\(A_c\\) = catchment area (m2) Storage Variables \\(S_{(t)}\\) = total volume of water stored in catchment at time \\(t\\) (m3) \\(S_{max}\\) = maximum storage capacity of bucket/ catchment (m3) \\(S_{fc}\\) = threshold storage i.e. storage at field capacity (m3) \\(S_{us}\\) = water storage in unsaturated zone (m3) \\(S_{sat}\\) = water storage in saturated zone (m3) \\(S_{gw}\\) = water storage in deep store (m3) \\(f_c\\) = threshold storage parameter i.e. 0 &lt; \\(f_c\\) &lt; 1 (dimensionless) \\(\\theta_{fc}\\) = field capacity (dimensionless) \\(\\theta_{pwp}\\) = permanent wilting point (dimensionless) \\(\\varphi\\) = porosity (dimensionless) \\(D\\) = soil depth from bottom (m) \\(D_{ebs}\\) = effective depth of influence from the bottom of the saturated zone for bare soil evaporation (m) \\(D_{eag}\\) = effective depth of influence from the bottom of the saturated zone for agricultural crop evaporation (m) \\(S_{us(fc)}\\) = current unsaturated zone field capacity (m3) ET Variables/Fluxes \\(e_t\\) = total evapotranspiration at time \\(t\\) (m/d) \\(e_v\\) = transpiration (m/d) \\(e_{v(sat)}\\), \\(e_{v(us)}\\) = transpiration of deep rooted vegetation from saturated and unsaturated zone, respectively (m/d) \\(e_{bs}\\) = bare soil evaporation (m/d) \\(e_{bs(sat)}\\) , \\(e_{bs(us)}\\) = bare soil evaporation from saturated and unsaturated zone, respectively (m/d) \\(e_{ag}\\) = agricultural crop evapotranspiration (m/d) \\(LAI\\) = leaf area index (dimensionless) \\(M\\) = % of catchment covered by deep rooted vegetation (dimensionless) \\(C\\) = % of catchment covered by shallow rooted agricultural crops (dimensionless) \\(k_v\\) = vegetation transpiration efficiency (dimensionless) \\(K_s\\) = saturated hydraulic conductivity (dimensionless) \\(\\alpha_{ebs}\\) = bare soil evaporation scaling factor (dimensionless) \\(\\alpha_{eag}\\) = agriculture evaporation scaling factor (dimensionless) Flow Variables/Fluxes \\(Q_t\\) = total runoff at time \\(t\\) (m/d) \\(Q_{se}\\) = saturation excess surface runoff (m/d) \\(Q_{ss}\\) = subsurface runoff (m/d) \\(Q_{bf}\\) = base flow (m/d) \\(R_p\\) = daily percolation \\(S_{us} \\rightarrow S_{sat}\\) (m/d) \\(R_g\\) = daily recharge \\(S_{sat} \\rightarrow S_{gw}\\) (m/d) \\(\\alpha\\), \\(\\beta\\) = recession coefficients for subsurface flow from saturated zone \\(\\alpha_{bf}\\), \\(\\beta_{bf}\\) = recession coefficients for subsurface flow from groundwater store Equations Maximum Storage Capacity of the Bucket/Catchment Already completed in WATER BALANCE \\[\\begin{equation} S_{max}=D\\left(\\varphi-\\ \\theta_{pwp}\\right) A_c \\tag{33} \\end{equation}\\] The theoretical maximum storage capacity of the catchment is calculated by taking the difference between the porosity of the catchment soil (i.e. a measure of the total pore space in the soil, and hence, its ability to store water) and the permanent wilting point of the soil (the point at which volumetric water content is too low to be extracted from the soil by plants) and multiplying it by the volume of the catchment (i.e. surface area multiplied by the depth of the catchment). Note that \\(S_{max}\\) is the sum of \\(S_{us}\\) and \\(S_{sat}\\), and does not include \\(S_{gw}\\). Note that ‘plant available water’ is the water content difference between field capacity and permanent wilting point of the soil at any given depth. Threshold Storage Already completed in WATER BALANCE \\[\\begin{equation} f_c=\\ \\left(\\frac{\\theta_{fc}-\\ \\theta_{pwp}}{\\varphi-\\ \\theta_{pwp}}\\right) \\tag{34} \\end{equation}\\] Field capacity is the point at which all pore space small enough to retain water against the pull of gravity are filled (Brady and Weil, 1999). It is essentially the remaining water content of the soil after the removal of water by the downward forces of gravity over a daily time period. Field capacity therefore assumes that the water removed from the soil profile is only removed by gravity, not through plant suction or evaporation. The above formula calculates the threshold storage parameter as the proportion of ‘plant available water’ over storage capacity of the soil at any given depth. \\[\\begin{equation} S_{fc}=\\ S_{max} f_c \\tag{35} \\end{equation}\\] The volumetric water storage at field capacity is therefore the theoretical maximum storage capacity of the catchment multiplied (or limited by) the threshold storage parameter (which is ≤ 1). Water Table Depth The water table depth is calculated with the following equation: \\[\\begin{equation} WT^{t}= \\frac{S_{sat}^{t}}{A_{c}\\varphi} \\tag{36} \\end{equation}\\] Water Balance \\[\\begin{equation} S_{tot}^{t+1}= S_{tot}^{t}+(P^{t+1}- e_{tot}^{t+1})A_{c} - Q_{tot}^{t+1} \\tag{37} \\end{equation}\\] \\[\\begin{equation} \\color{grey}{S_{tot}^{t+1\\prime}}= S_{tot}^{t}+ (P^{t+1}*A_{c}) \\tag{38} \\end{equation}\\] Water storage at any given time step, \\(t\\), is calculated using the previous time step’s water storage as a starting point (\\(t\\)). Inflows and outflows of water from the system/ bucket are then incorporated to obtain the next consecutive value of \\(S\\). Precipitation recorded in the current time step (inflow) is added to the initial storage value, whilst total evapotranspiration and total runoff (outflows) are both subtracted. Total water storage is made up of water stored in the saturated and unsaturated zones. Note that the initial value of \\(S_{tot}\\) may be empirically determined or assumed to be a certain value. The initial value of \\(S_{sat}\\) is taken to be \\(D\\) less than the depth from the surface to the water table, which can be measured. \\[\\begin{equation} S_{us}^{t+1}=\\ \\color{grey}{S_{tot}^{t+1^\\prime}}-\\ S_{sat}^{t+1} \\tag{39} \\end{equation}\\] \\[\\begin{equation} S_{us(fc)}^{t+1}=\\ f_c\\left(S_{max}-\\ S_{sat}^t\\right) \\tag{40} \\end{equation}\\] Threshold storage in the unsaturated zone is simply the maximum potential storage capacity in the unsaturated zone multiplied (limited) by the threshold storage parameter. \\[\\begin{equation} S_{us}^{t+1\\prime}=\\ S_{us}^{t} + P^{t+1} \\times\\ A_{c} \\tag{41} \\end{equation}\\] \\[\\begin{equation} R_{p}^{t+1} = \\left\\{\\begin{matrix} \\color{grey}{S_{us}^{t+1^\\prime}}-S_{us(fc)}^{t+1},\\ \\ &amp;\\color{grey}{S_{us}^{{t+1}^\\prime}}&gt;\\ S_{us(fc)}^{t+1} \\\\ 0,\\ \\ &amp;S_{us(fc)}^{t+1} \\ge \\color{grey}{S_{us}^{{t+1}^\\prime}} \\end{matrix}\\right. \\tag{42} \\end{equation}\\] Equation (42) is an IF Statement. The daily recharge rate from the unsaturated zone to the saturated zone is calculated as water storage in the unsaturated zone at the present time step, in addition to any new precipitation that has occurred, minus the threshold storage of the unsaturated zone (i.e. water which does not drain due to the downward forces of gravity alone). Recharge of this nature only occurs in the event that the combination of precipitation at the current time step, and water storage in the unsaturated zone, is greater than the threshold field capacity of the unsaturated zone. \\[\\begin{equation} S_{sat}^{t+1}=\\ S_{sat}^t+\\ R_p^{t+1}-\\ Q_{ss}^{t+1}-\\ e_{v}^{t+1}A_{c} \\tag{43} \\end{equation}\\] Note the use of “\\(t+1\\)” on the Right Hand Side for \\(R\\), \\(Q\\) and \\(e\\) will be on the same row since they are computed based on yesterday’s \\(S\\). The balance of volumetric water storage in the saturated zone is therefore calculated as the previous period’s storage plus any recharge from the unsaturated zone, minus outflows including recharge to groundwater, subsurface runoff, and total evapotranspiration (bare soil, deep rooted vegetation and agricultural crop) from the saturated zone. Total Evapo-transpiration \\[\\begin{equation} e_{tot}^t=\\ e_v^t+\\ e_{bs}^t+\\ e_{ag}^t \\tag{44} \\end{equation}\\] Total evapotranspiration (ET) of the system is the sum of ET from deep rooted native vegetation, bare soil and agricultural crops in the catchment. Native vegetation ET is calculated as follows. Simple form: \\[\\begin{equation} e_v^{t+1}= M \\frac{S_{tot}^t}{S_{max}} k_v e_p^{t+1} \\tag{45} \\end{equation}\\] Agricultural/Shallow Root Crop Evapotranspiration For evapotranspiration by agricultural crops, we make the assumption that they can draw water from the unsaturated zone only, thus: \\[\\begin{equation} e_{ag}^{t+1}=C \\alpha_{eag}[\\frac{S_{us}^t}{S_{max}-S_{sat}^t}]e_{p}^{t+1} \\tag{46} \\end{equation}\\] Bare Soil Evaporation \\[\\begin{equation} e_{bs}^{t+1} = \\left\\{\\begin{matrix} (1-M-C)e_p^{t+1},\\ \\ &amp;S_{sat}^t\\geq\\varphi D_{ebs} A_c \\\\ (1-M-C)\\left[\\frac{S_{us}^{t}}{S_{max} - S_{sat}^t}\\right]e_p^{t+1},\\ \\ &amp;S_{sat}^t&lt;\\varphi D_{ebs} A_c \\end{matrix}\\right. \\tag{47} \\end{equation}\\] This is an IF statement. In Excel split this equation up into the ‘TRUE’ and ‘FALSE’ columns. Flows \\[\\begin{equation} Q_{tot}^t = Q_{se}^t + Q_{ie}^t + Q_{ss}^t \\tag{48} \\end{equation}\\] Total runoff of the system is the sum of saturation excess, infiltration excess, subsurface runoff, and (optional) base flow. \\[\\begin{equation} Q_{se}^t = \\left\\{\\begin{matrix} \\color{grey}{{S}_{tot}^{t \\prime}}-\\ S_{max},\\ \\ &amp;\\color{grey}{{S}_{tot}^{t \\prime}}&gt;S_{max} \\\\ 0,\\ \\ &amp;\\color{grey}{{S}_{tot}^{t \\prime}}\\le S_{max} \\end{matrix}\\right. \\tag{49} \\end{equation}\\] Saturation excess is simply taken as being zero to the extent that water storage in the bucket/ catchment is less than maximum storage capacity. In the event that total water storage exceeds maximum capacity however, any excess is taken to be surface runoff. \\[\\begin{equation} Q_{ie}^t = \\left\\{\\begin{matrix} (P^t-I_{max})A_c,\\ \\ &amp;{P^t}&gt; I_{max} \\\\ 0,\\ \\ &amp;{P^t}\\le I_{max} \\end{matrix}\\right. \\tag{50} \\end{equation}\\] Subsurface flow: \\[\\begin{equation} Q_{ss}^{t+1} = \\left\\{\\begin{matrix} 0,\\ \\ &amp;S_{sat}^{t}\\le S_{usfc}^{t+1} \\\\ \\alpha_{s}\\frac{S_{sat}^t}{S_{max}}\\ \\ &amp;S_{usfc}^{t+1} &lt;\\ S_{sat}^t \\end{matrix}\\right. \\tag{51} \\end{equation}\\] Subsurface runoff is taken to be zero in cases where the total water storage is less than field capacity threshold (i.e. thus will not drain due solely to the forces of gravity). In the event that total storage in the bucket/ catchment is greater than threshold storage and less than maximum storage capacity, subsurface runoff is taken as a nonlinear function using the excess above threshold storage and the assigned recession coefficients. Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the Catchment system (may be combined with the 5b catchment model). Stacked area plot of water storage over time Plot of \\(Q_{ie}\\) (infiltration excess runoff) and precipitation (on a secondary axis) over time Plot of \\(Q_{ss}\\)(subsurface runoff) and precipitation (on a secondary axis) over time Stacked area plot of \\(e_{v}\\), \\(e_{bs}\\), \\(e_{ag}\\) (i.e. total evaporation) over time. In less than 100 words write an answer to: What is the general trend of rainfall over the long term? What is the general trend of storage over the long term? Why does the storage vary over the short term? Which flow mechanism contributes the most to the stream? What is the dominant ET flux? These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. "],["M5B_1.html", "Module 5b: Land Use and Nutrient Management", " Module 5b: Land Use and Nutrient Management Objectives To setup a nutrient export model to compare the effect of best management practices (BMPs) on nutrient loads from a catchment with mixed land use. Before you start Complete Module 5a Be familiar with the land use export model activity from lecture Review the flow concentration relationship document Review nutrient modelling lecture and be familiar with best management practices (BMPs) Model Overview Consider a catchment basin with with different types of land use. The daily runoff/streamflow through the catchment, \\(Q^t\\) (m3/day), can be approximated based on the daily rainfall (\\(R\\)) - see the Water Balance model in Module 5a. The phosphorus concentration in the water, \\(P^{t}\\) (g/m^3), depends on how much flow there is (i.e. more flow = more fertilizer leaching). To model this we use a simple power law to make a “flow-concentration relationship”, which is computed for each land-use (\\(P\\) is proportional to \\(\\alpha Q^{\\beta}\\)). If you’ve not seen a power law, sketch a graph of C (y-axis) vs Q (x-axis) for a value of \\(\\beta =1\\). What happens if \\(\\beta =2\\) or \\(\\beta =0.5\\)? This is averaged over the different land use fractions (denoted with the small \\(p\\) index), using the land-use fraction \\(F_l\\): \\[\\begin{equation} P^{t} = \\sum_{l=4}^{N_{p}} F_{p}\\left (\\color{#FF0000}{\\alpha_{l} \\left (\\frac{Q^{t}}{A_{c}} \\right )^{\\beta_{l}}+P_{0}} \\right ) \\tag{52} \\end{equation}\\] where alpha (\\(\\alpha\\)) and beta (\\(\\beta\\)) are variables that govern the stream \\(P\\) concentration (g/m3) as a function of area-averaged flow rate (\\(Q/A\\)) and they depend on the dominant land use (\\(l\\)). \\(N_l\\) is the number of land use classes being considered (4) and \\(P_0\\) is the background concentration (g/m3) for that sub-catchment (i.e. the value of PO4 when flow is low 0). \\(\\color{#FF0000}{\\alpha_{p} \\left (\\frac{Q}{A_{c}} \\right )^{\\beta_{p}}+P_{0}}\\) is the flow dependent concentration (\\(\\color{#FF0000}{P}\\)) of the p-th land use type. \\(P^{t} = \\sum_{l=4}^{N_{p}} F_{p}\\left (\\color{#FF0000}{\\alpha_{l} \\left (\\frac{Q^{t}}{A_{c}} \\right )^{\\beta_{l}}+P_{0}} \\right )\\) is a shorthand way of expressing: \\(P^{t} = F_{1}\\color{#FF0000}{P_{1}^{t}} + F_{2}\\color{#FF0000}{P_{2}^{t}} + F_{3}\\color{#FF0000}{P_{3}^{t}} + F_{4}\\color{#FF0000}{P_{4}^{t}}\\) The total \\(P\\) export load is \\(P_{load}\\) (g/day) and is the mass flux through the river (remember load = flow x concentration) : \\[\\begin{equation} P_{load}^{t} = P^{t} Q^{t} \\tag{53} \\end{equation}\\] Module Resources The Excel spreadsheet for this module is part of the Module 5 download. Access using the download button in the tool bar . Exercises Building the model Draw by hand the conceptual model of this system. Confirm with the person beside you what index means (\\(t\\) and \\(l\\)). Set your modelled \\(Q_{tot}\\) to equal your \\(Q_{tot}\\) values in the WATER BALANCE - 5a sheet Calibrating the model Let’s make sure the model flows are realistic. Let’s compare our prediction with some observed data: Create a regression plot of the observed \\(Q_{tot}\\) and your modelled \\(Q_{tot}\\) Tailor this model to use the information as outlined in Table 6. Add a linear trendline, R2, and the line equation to the plot. Aim to achieve modelled flow values that closely match the observed \\(Q_{tot}\\) You want a high R2 value (greater than 0.8) and a slope coefficient close to 1. Table 6: Parameters for the individual catchments. Parameters for catchment model: Catchment value Sub catchment area, \\(A\\) (km2) 50 Soil depth, \\(D\\) 10 Baseflow coefficient, \\(\\alpha_s\\) (range) 5e3 to 5e4 Field capacity, \\(\\theta_{fc}\\) (range) 0.08 to 0.15 Infilt. capacity, \\(I_{max}\\) (range) 0.01 to 0.3 Deep rooted vegetation fraction, \\(M\\) (range) 0.42 to 0.65 Crop vegetation fraction, \\(C\\) (range) 0.25 to 0.4 Starting storage, \\(S_{0}\\) 1.05E+08 \\(Ssat_{0}\\) 94500000.00 Manually adjust the catchment model parameters (see possible ranges in table above) until the model best matches the observed data - the observed flow data and water table data is in the CLIMATE sheet. This processed is called “calibration”. Check this by using a regression plot of the given total observed streamflow and the model total streamflow, checking to get the highest R2 value. Calculate phosphate concentrations Now let’s work out the land-use specific stream \\(P\\) concentrations in the PHOSPHOROUS sheet: Predict the catchment river \\(P\\) concentrations and total export load, \\(P_{load}\\). The best way to do this is first predict the \\(P\\) concentration of each land-use class each as a column (i.e. Dairy \\(P\\) concentration, Wheat \\(P\\) concentration and so on), and then sum the 4 columns for \\(P^t\\) by factoring the (\\(F_l\\)) for each land-use. Table 7: Phosphate parameters. Parameters for P conc.: \\(\\alpha\\) (alpha) \\(\\beta\\) (beta) land-use \\(F_l\\) Landuse parameters: irrigated dairy (\\(l\\)=1) 2.1 0.90 0.30 Landuse parameters: wheat (\\(l\\)=2) 1.2 0.45 0.10 Landuse parameters: urban (\\(l\\)=3) 1.9 0.80 0.15 Landuse parameters: forest (\\(l\\)=4) 0.5 1.20 0.45 See how dairy has the highest alpha? This means it produces the most \\(P\\) of all 4 classes. Calculate phosphate export load Compute the \\(P_{load}\\) at the catchment outlet in kg/day. Also, work out the cumulative load (this will come in handy to coampre scenarios; we call it a mass curve) Consider 2 management scenarios Finally, let’s run 2 management scenarios: 8a) Scenario 1: If the total urban area expanded to 50% (0.5), how would this affect the overall \\(P\\) export? Change the land use fractions manually. They still have to add up to 1, so change the other parts as you see appropriate, i.e. urban area usually comes at the expense of forest, but you can decide how to change the landscape. Record your changed fractions. 8b) Scenario 2 If the irrigated dairy industry incorporated new phosphorus reduction technology, i.e. a best management practice (BMP) which leads to less \\(P\\) concentrations going from the farm to the stream. How would this affect the overall concentration in the water at the river basin outlet? The dairy concentration is now no more than 0.06 g m3. Use an IF statement to put a conditional cap on your dairy phosphorous concentration Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the Catchment system (may be combined with the 5a catchment model) Plot of calibration regression plot, including a trendline, equation and R2 value. Include in the caption what parameter values you gave the catchment. Plot of the cumulative phosphorous export of increased urbanisation (Scenario 1) and dairy management (Scenario 2) compared to the original conditions, over time. Plot of the concentration-flow relationship for the three scenarios of phosphorous concentration. Any other interesting plots you may like to create. These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. "],["M6_1.html", "Module 6: River Pollution", " Module 6: River Pollution Objectives In this module you will setup an “advection-dispersion-reaction” equation for a river system to demonstrate the combination of temporal and spatial finite differencing, in one dimension. Before you start Review the mixing in the environment lecture Undertake the lecture’s lake oxygen worked example Advection-Dispersion Reaction Mixing in environmental waters is described based on the currents and turbulence in the water - in simple terms we refer to these as advection and dispersion. The advection-dispersion reaction equation for the concentration of a substance \\(C\\), is defined as: \\[\\begin{equation} \\frac{\\delta C}{\\delta t} = D_{d}\\frac{\\delta^{2} C}{\\delta x^{2}} - u \\frac{\\delta C}{\\delta x} + S + R \\tag{54} \\end{equation}\\] where the left hand side (LHS) is the “unsteady” term (\\(C\\) change in time), the first term on the right hand side (RHS) is the dispersion/mixing term, the second term on the RHS is the advection/movement term and \\(S\\) is a source term, and \\(R\\) is a reaction term. We use a partial deriviative (“curly \\(\\delta\\)”) since \\(C\\) is now varying in both space and time. In this exercise we numerically solve the 1-dimensional, advective-dispersive transport of oxygen in a river. To solve this equation numerically, we must “discretise” the partial derivatives using finite difference methods, here done according to the FTCS scheme (refer to lecture!): \\[\\begin{equation} \\frac{C^{t+1}_{x}-C^{t}_{x}}{\\Delta t}=D_{d} \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}-u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}+R_{x}+S_{x} \\tag{55} \\end{equation}\\] Where the \\(t\\) subscript is referring to timestep, and the \\(x\\) subscript refers to the space increment/position. For the case of oxygen we assume that \\(R\\) is accounting for oxygen input from the atmosphere and consumption by bacteria (called the Biochemical Oxygen Demand, BOD), then: \\[\\begin{equation} R_x=k_a\\left(C_a-C_x^t\\right)-k_{BOD}C_x^t \\tag{56} \\end{equation}\\] Where the first term is atmospheric exchange (\\(k_a\\) is the rate of re-aeration and \\(C_a\\) is the saturation value of oxygen) and the second term is the bacterial consumption (described by \\(k_{BOD}\\) which is in units of day-1). We can solve for the forward timestep at any position along the river by computing: \\[\\begin{equation} \\small{C_{x}^{t+1}=\\color{#898989}{C_{x}^{t}}+ \\left [ \\color{#3A88FE}{D_d \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}}-\\color{#FF2600}{u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}} + \\color{#77BB41}{k_{a}(C_{a}-C_{x}^{t})}-\\color{#B18CFE}{k_{BOD}C_{x}^t} \\right ]\\Delta t+\\color{#D58400}{S_{x}}} \\tag{57} \\end{equation}\\] Previous \\(C\\) concentration: \\(\\color{#898989}{C_{x}^{t}}\\) Diffusion: \\(\\color{#3A88FE}{D_d \\frac{C_{x+1}^{t}-2C_{x}^{t}+C_{x-1}^{t}}{\\Delta x^{2}}}\\) Advection: \\(\\color{#FF2600}{u_{x}^{t} \\frac{C_{x+1}^{t}-C_{x-1}^{t}}{2\\Delta x}}\\) Atmospherical exchange: \\(\\color{#77BB41}{k_{a}(C_{a}-C_{x}^{t})}\\) Biological O2 demand: \\(\\color{#B18CFE}{k_{BOD}C_{x}^{t}}\\) O2 source/sink: \\(\\color{#D58400}{S_{x}}\\) To solve this the user specifies the initial oxygen concentration (\\(C_0\\)), river velocity (\\(u\\)) as a function of distance, grid length (\\(L\\)), grid spacing (\\(\\Delta x\\)), simulation period (\\(T\\)), time step (\\(\\Delta t\\)). The calculation should then compute the change in oxygen as a function of distance and time. Extra sources or sinks of oxygen can by added into the domain based on the \\(S\\) term. We will first set up the model to have no \\(S\\) inputs along the side of the river, but in the last task we add a low oxygen discharge somewhere along the river (ie. a pipe outflow). Module Resources Download the Excel spreadsheet and R files for this module by clicking the download button in the tool bar . You can use either Excel or R for this module. Exercises Setting up the Model Draw the schematic of the conceptual model by hand, showing the spatial discretisation, boundaries, sources, reactions, and a little animal swimming in the river. Start with the provided spreadsheet or R script, and implement the above expression. Set up the spreadsheet to assume a river of length (\\(L\\)) ~5 km. You will need to select an \\(x\\) increment (\\(\\Delta x\\)). In Excel, time is going down the rows and distance (space) is going along the columns. Set the initial condition (\\(C_0\\)) row to be 10 mg O2/L – i.e. the whole river starts at 10 mg/L in each cell. Once you see the formula is working in the first time-step, then copy the formula along the length of the river. You will need to set a downstream boundary condition (at the the position where \\(x = L\\), the last column). For this we will set a “zero-derivative” condition \\(– \\frac{\\delta C}{\\delta x} = 0\\). Therefore \\(C_n = C_{n-1}\\), where \\(n\\) is the last cell of the river length. Copy the first time row down for all the time-steps (simulate several days in total). Plot the oxygen concentration as a function of distance for several times during the simulation. For Excel users, Set up conditional formatting to help visualise the concentration change through space and time Modelling a Wastewater Plume Implement at \\(x \\approx 1500\\text{m}\\) a wastewater plume entering the river – do this by reducing the \\(C\\) at the relevant \\(x\\) cell by 3 mg/L (or less if the \\(C\\) is already below 3). This is done by adding the extra “\\(S\\)” term of -3 to the appropriate \\(x\\)-cell formula, and copying the formula down through time. Plot and note how the oxygen recovers downstream of the low oxygen inflow plume. To prevent negative O2 concentration (in otherwords, we can’t take more than is available) we cap the solution to be greater than 0. Preventing negatives can be done as: =MAX(equation, 0 ) Figure 9: Advection and dispersion of O2 in a river of length \\(x\\). Note, in this figure \\(W_c\\) refers to our wastewater plume (click here for image source). The above example should show the low oxygen water diffusing into the river environment. The default velocity in this river was 0.2 m/s which is not very fast. Increase the velocity (\\(U\\)) in all cells to 1.2 m/s and see how the shape of the waste water plume changes. Now the advection term will be more significant, you should see the plume moving more strongly down stream. Modelling an O2 Drop Change the upstream boundary concentration at \\(x = 0\\), to include a sudden drop in oxygen for a period of 0.5 hour. Plot how this signal propagates through the river domain during and after the period where the upstream condition drops – can you see the low oxygen pulse moving through the river? How does this concentration profile vary if the diffusivity is different? Modelling your own Scenario Create your own environmental scenario using this model, make a brief description of it, calculate a result and if necessary, express the result with a figure. If you see fluctuating negative and positive concentrations, you might have numerical instability. Adjust your \\(\\Delta t\\) or \\(\\Delta x\\). Figure 10: A plume of coloured dye dispersing through a river. Submission Submit properly formatted graphs and tables of the following sections of the lab: Clear photograph or page scan of your hand drawn conceptual model of the river with all the oxygen transport processes labelled. A plot of oxygen concentration at several times plotted for all distance of the river. A plot of oxygen concentration at several points of the river plotted for all time. A plot of the oxygen concentration with the upstream boundary drop at several points of the river plotted for all time. A plot of the oxygen concentration with the wastewater plume at several times plotted for all distance of the river. A plot of your own individual environmental scenario. Don’t plot too many lines – only several are necessary and use your judgement to select how many show the results well whilst the plot still clear and easy to understand. Make sure your axes are well labelled and clear to read. If abbreviating oxygen, include a subscript in O2. These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. "],["M7_1.html", "Module 7: Lake Ecosystem Dynamics", " Module 7: Lake Ecosystem Dynamics Objectives To use the GLM model to investigate water quality modelling in lakes and to incorporate a coupled hydrodynamic-biogeochemical model. Before you start Review modelling aquatic systems lecture Module Resources This week, you’ll be working through the GLM Workbook. If you’re not already familiar with GLM, start by reading the Getting Started, File Structure, and Running GLM chapters. Your task will be to complete the Warm Lake Case Study. As you work through this chapter you may find it helpful to refer to some of the Exercises in the GLM workbook. Submission Submit properly formatted graphs and tables of the following sections of the lab: Lake Stratification: Hand drawn diagram of the lake and any variables you used Plots of the water balance Plots of the heat fluxes Plots of the temperature at different layers Plots of the shallower lake The Ecosystem Model: Hand drawn diagram of the lake with any variables you used Interesting plot of the selected variables Any results of the higher air temperature and changed water clarity Assessing Error &amp; Sensitivity: Temperature error assessment Temperature and phytoplankton sensitivity assessment Tables for submission These are to be uploaded as per the formatting specified in the Style Guide. Marks will be deducted for incorrect formatting. "],["FinalProject.html", "Final Project Overview Brainstorm Research &amp; Discovery Conceptual Model &amp; Plan Two-pager/Pitch Idealised Prototype Validation/Evaluation Scenarios/Limits Presenting Results", " Final Project Overview Your major assessment in this unit is an environmental model that you design and a scientific report that you write about your model. The sooner you can start this project, the better it will be. Brainstorm Complete by: end of Week 8 During the first eight weeks, start to think of ideas for your project. As you work on the weekly exercises, consider how you could make a similar model. Also think about an environmental system that you are interested in, or that you have experience with from other units in your degree. Consider what you might like to do next year, whether it is research honours or a career, and whether this project can be a step towards this. Research &amp; Discovery Complete by: Week 8-9 Commit to a main idea that you would like to pursue. Find some key references for background information and data that you can compare with your simulation. Discuss your ideas with the tutors. Conceptual Model &amp; Plan Complete by: end of Week 9 Design a conceptual model for your project. Decide on the boundary conditions, initial conditions, interactions between variables in the system, data to calibrate the model and scenarios to test the model. Your environmental model can be simple, with only a few major components in its system. It is good if it is discretised with time, like the weekly exercises. Two-pager/Pitch Write up your plan for the model in two pages. Include a short introduction of background material. Sketch the interactions between the variables in the system. This two-pager will help you commit to your model, it will help you think it through from beginning to end, and it will give the tutors an overview of your work. Idealised Prototype Build your model. You can use Excel, R or some other software. Your model may have a base case scenario. You may take one of the weekly exercises and expand its capability. Validation/Evaluation Compare the key outputs of your model to some measured data. It does not have to have a perfect match, although results within an order of magnitude are preferable. Calculate and discuss the difference between your result and a measured result. Change the values of some key parameters if their value is uncertain. Calculate the relative difference in some major result as you change the parameter values. For example, if the parameter for sensitivity to wind is twice as high, is the lake water temperature twice as high or half as high? Scenarios/Limits Once your model is working, use it to test scenarios. You could change the initial conditions or the boundary conditions. For example, what if the starting population of quokkas were twice as high? What if temperature were 1 degree higher? Presenting Results Your work will be assessed by the report that you write. It will be in the format of a standard scientific report. Introduction Write background information necessary for the reader to understand your hypothesis. Only include the most relevant information. Include a justification for using an environmental model to answer a question. For example, you may write that we know that fact one is true we also know that fact two is true we don’t know what happens when fact one interacts with fact two, but we expect that it will have this result we can simulate the interaction between them using a model Methods Describe the conceptual model that you use, including a diagram, if possible. Describe the technical setup of your model such that the reader could replicate it. Include major equations or a link to an appendix where all equations are listed. Include parameter values. Describe any scenarios that you ran with the model. Only include methods and do not include any results. Results List the major results. Do not include any methods, and do not include any analysis of the results. Provide figures and tables of results. List the results of any scenarios, sensitivity analyses and error assessments. Discussion Discuss how your results relate to the question you listed in the introduction. Did your model answer the question that you set out to answer? Discuss the scientific and environmental implications of your result and the implications of your scenarios. Assess the technical details of your model. Was it the right tool for the job? Mention the future work that would be done next based on your results. Bibliography List your references, using a consistent and professional format. "],["tidyverse.html", "Learning the Tidyverse Visualising Module 1 Flow Data Visualising Diversion Scenarios Barcharts and Pipes", " Learning the Tidyverse Visualising Module 1 Flow Data Setting up Creating an R Studio project Open R Studio Go File -&gt; New Project -&gt; New Directory -&gt; New Project Directory name: ENVT3362_workshop_2 Create project as a subdirectory of: Wherever you store your ENVT3362 files! Click Create project Download the spreadsheet for this workshop here Move this to your ENVT3362_workshop_2 directory Install the tidyverse Type this into the R console You only need to do this once install.packages(&quot;tidyverse&quot;) Importing and formatting the data Load the necessary packages library(tidyverse) loads all the ‘core’ tidyverse packages readxl and lubridate need to be loaded separately library(tidyverse) library(readxl) library(lubridate) Import the spreadsheet The path argument is relative to you R Studio project file sheet specifies which Excel sheet to read envFlow &lt;- read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) Inspect the data head() prints the first few observations What data type is date? head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;chr&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Format the date Use lubridate’s ymd() function to overwrite the existing date variable and convert the character data to date data envFlow$date &lt;- ymd(envFlow$date) Inspect the data again Notice the change in data type of date head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;date&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Graphing with ggplot Call ggplot() ggplot() Define the data and mapping The aesthetics (aes()) provide the mapping between variables in the data and the plot’s visual properties ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) Add a geometry layer geom_ functions tell ggplot how to render each observation ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line() Change the geometry As long as the aesthetics can be mapped to the declared geometry type, ggplot will render the graph ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_point() Change the colour Colours can either be hexadecimal codes (e.g. \"#0000FF\" is blue) or one of R’s reserved colour names ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) Fix the labels ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) Change the theme ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() Customise the theme ggplot(data = envFlow, mapping = aes(x = date, y = totalDischarge)) + geom_line(colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Save the plot File types can be changed by modifying the file extensions e.g. \"discharge.jpeg\" ggsave( filename = &quot;discharge.pdf&quot;, width = 2000, height = 2000, units = &#39;px&#39; ) Visualising Diversion Scenarios Let’s pretend our graph will be used in a report that assesses the impact of the proposed diversion scenarios. We need to visually communicate to the reader the upper and lower limits of flows that can be diverted. To do this, let’s highlight the region of the graph where environmental flows can occur under Diversion Scenario 1 (i.e. Water below 50 ML/day and above 550 ML/day is not diverted). Map the current aesthetics to geom_line() aes() can be passed to either ggplot() or a specific geom_ Aesthetics supplied to ggplot() are used as defaults for every layer ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Add a second geometry geom_rect() has two dimensions and therefore reques different aesthetic mappings ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect(mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550))+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Customise the geometry ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550), alpha = 0.25 )+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Add a legend By specifying fill inside the aesthetics, ggplot maps this information to the geom’s fill (i.e. the colour fill) Usually a grouping variable from the data would be provided here i.e. a column that classifies your data into different groups ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Customise the legend ggplot automatically assigns the colours, change this with scale_fill_manual() ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ scale_fill_manual(values = &quot;red&quot;)+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;), legend.title = element_blank() ) Move the legend ggplot() + geom_line(data = envFlow, mapping = aes(x = date, y = totalDischarge), colour = &quot;dodgerblue3&quot;) + geom_rect( mapping = aes(xmin=min(envFlow$date),xmax=max(envFlow$date), ymin=50, ymax=550, fill = &quot;Diversion Scenario 1&quot;), alpha = 0.25 )+ scale_fill_manual(values = &quot;red&quot;)+ labs(x = &quot;Date&quot;, y = &quot;Total Discharge (ML)&quot;) + theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;), legend.title = element_blank(), legend.position = &quot;top&quot;, legend.justification = &quot;right&quot; ) Save the plot ggsave( filename = &quot;dischargeDiversion1.pdf&quot;, width = 297, height = 210, units = &#39;mm&#39;, scale = 0.8 ) Barcharts and Pipes Reload the data envFlow &lt;- read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) Use pipes and mutate() to reformat the date The pipe (%&gt;%) operator takes the output from one function and makes it the input of the next Pipes can be used across the tidyverse when working with tidy data mutate() is used to add or remove variables when working with pipes This is the same as envFlow$date &lt;- ymd(envFlow$date) but it’s ‘pipeable’! envFlow %&gt;% mutate(date = ymd(date)) ## # A tibble: 6,940 × 2 ## date totalDischarge ## &lt;date&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 ## 7 1992-01-07 27.1 ## 8 1992-01-08 26.8 ## 9 1992-01-09 26.7 ## 10 1992-01-10 26.0 ## # … with 6,930 more rows Extract the years year() returns the numerical year from date formatted data envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) ## # A tibble: 6,940 × 3 ## date totalDischarge year ## &lt;date&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 1992 ## 2 1992-01-02 26.8 1992 ## 3 1992-01-03 27.3 1992 ## 4 1992-01-04 27.0 1992 ## 5 1992-01-05 26.5 1992 ## 6 1992-01-06 26.8 1992 ## 7 1992-01-07 27.1 1992 ## 8 1992-01-08 26.8 1992 ## 9 1992-01-09 26.7 1992 ## 10 1992-01-10 26.0 1992 ## # … with 6,930 more rows Pipes are non-destructive Notice how envFlow is unchanged? This is useful when performing ‘data exploration’ as the original dataframe never altered head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;chr&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Group and summarise Group the data by new year column and calculate summary statistics with summarise() envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) ## # A tibble: 19 × 2 ## year totalDischarge ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1992 89538. ## 2 1993 21042. ## 3 1994 16511. ## 4 1995 31838. ## 5 1996 128586. ## 6 1997 18061. ## 7 1998 23067. ## 8 1999 19090. ## 9 2000 189366. ## 10 2001 17462. ## 11 2002 13946. ## 12 2003 39874. ## 13 2004 124288. ## 14 2005 8567. ## 15 2006 4182. ## 16 2007 5221. ## 17 2008 8418. ## 18 2009 62334. ## 19 2010 33940. Plot using geom_col() Pipe this into ggplot() Note that we don’t need to specify the data argument to ggplot() envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) Apply the previous theme envFlow %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) + labs(x=&quot;Year&quot;, y = &#39;Total Discharge (ML)&#39;)+ theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) Recap read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) %&gt;% mutate(date = ymd(date)) %&gt;% mutate(year = year(date)) %&gt;% group_by(year) %&gt;% summarise(totalDischarge = sum(totalDischarge)) %&gt;% ggplot(mapping = aes(x = year, y = totalDischarge)) + geom_col(fill = &quot;dodgerblue3&quot;) + labs(x=&quot;Year&quot;, y = &#39;Total Discharge (ML)&#39;)+ theme_light() + theme( axis.title = element_text(face = &quot;bold&quot;), axis.text = element_text(colour = &quot;black&quot;) ) "],["baseplot.html", "Learning to use the base plot Visualising Module 1 Flow Data Graphing with base plot Call plot() and then start again Make an annual column chart Make a multi-plot figure", " Learning to use the base plot As an alternative to ggplot and tidyverse, there are other basic plotting functions that you might prefer. This module takes you through a few basic plotting functions. It starts in the same way as the tidyverse module, using the same dataset. Visualising Module 1 Flow Data Setting up Creating an R Studio project Open R Studio Go File -&gt; New Project -&gt; New Directory -&gt; New Project Directory name: ENVT3362_workshop_2 Create project as a subdirectory of: Wherever you store your ENVT3362 files! Click Create project Download the spreadsheet for this workshop here Move this to your ENVT3362_workshop_2 directory Importing and formatting the data Load the necessary packages readxl and lubridate need to be loaded separately library(readxl) library(lubridate) Import the spreadsheet The path argument is relative to you R Studio project file sheet specifies which Excel sheet to read envFlow &lt;- read_xls(path = &quot;envFlowData.xls&quot;, sheet = 1) Inspect the data head() prints the first few observations What data type is date? head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;chr&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Format the date Use lubridate’s ymd() function to overwrite the existing date variable and convert the character data to date data envFlow$date &lt;- ymd(envFlow$date) Inspect the data again Notice the change in data type of date head(envFlow) ## # A tibble: 6 × 2 ## date totalDischarge ## &lt;date&gt; &lt;dbl&gt; ## 1 1992-01-01 26.6 ## 2 1992-01-02 26.8 ## 3 1992-01-03 27.3 ## 4 1992-01-04 27.0 ## 5 1992-01-05 26.5 ## 6 1992-01-06 26.8 Graphing with base plot Simply using the ‘plot’ function will make a default points plot. The plot does not look good, however, the function is convenient for checking your data quickly. Call plot() plot(envFlow) plot defaults to a points plot, but we can quickly change it to a line plot using the argument type = \"l\". plot(envFlow, type = &quot;l&quot;) Just as with ggplot, we can access the R database of standard colours. plot(envFlow, type = &quot;l&quot;, col = &quot;dodgerblue3&quot;) By default it is selecting x and y from columns 1 and 2. plot(x=envFlow$date, y=envFlow$totalDischarge ,type=&quot;l&quot;,col=&quot;dodgerblue3&quot;) If you had several columns, you could choose which to plot on the y axis. We can make a new variable, say, double flow. A new line can be appended to the original plot using the lines function. doubleflow = envFlow$totalDischarge * 2 plot(x=envFlow$date, y=envFlow$totalDischarge ,type=&quot;l&quot;,col=&quot;dodgerblue3&quot;) lines(x=envFlow$date, y=doubleflow, col=&quot;red4&quot;) To plot a subset of the data, use the square brackets to select indices, say, points 100 to 800. doubleflow = envFlow$totalDischarge * 2 plot(x=envFlow$date[100:800], y=envFlow$totalDischarge[100:800] ,type=&quot;l&quot;,col=&quot;dodgerblue3&quot;) Similarly, the limits of the axes can be set with the xlim and ylim arguments. plot(x=envFlow$date, y=envFlow$totalDischarge ,type=&quot;l&quot;,col=&quot;dodgerblue3&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ,ylim = c(0,1500) ) Call plot() and then start again The base plot is convenient, however, to make it look good, sometimes it is easier to plot it as a blank and add each element in separately. Just as “l” was the argument for lines, “n” is an argument for no plot. We can even turn off the axes and titles. plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ) Then we can add all the elements back in. The plot is still open so it will plot everything to the blank plot. plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) lines(envFlow$date,doubleflow,col=&quot;red4&quot;) box(bty=&quot;o&quot;) Axis and mtext We can put the axis and axis labels back in using the functions ‘axis’ and ‘mtext’. They both have the side argument: 1 = bottom, 2 = left, 3 = top, 4 = right The font size defaults to 1, but we can adjust it using the argument cex. The distance from the axis is set using line. the expression function allows formatting of text, such as subscripts and superscripts. plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) lines(envFlow$date,doubleflow,col=&quot;red4&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Date&quot;,line=2) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=2) axis(2,cex=0.7) The date axis needs to be formatted, then the axis.Date function is used. This step is clunky compared to ggplot. plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) lines(envFlow$date,doubleflow,col=&quot;red4&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Date&quot;,line=2) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=2) axis(2,cex=0.7) x.axis&lt;-as.Date(seq(min(envFlow$date),max(envFlow$date),by=3*365),format=&quot;%Y&quot;) axis.Date(at=x.axis,side=1,cex=0.7) Legend Add a legend using the legend function. You can search for its details. In this case, topleft is the position, inset by 0.1; the legend argument is the text, col is the sequence of colours, and pch is the symbol. plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;2000-01-01&quot;),date(&quot;2005-01-01&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) lines(envFlow$date,doubleflow,col=&quot;red4&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Date&quot;,line=2) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=2) axis(2,cex=0.7) x.axis&lt;-as.Date(seq(min(envFlow$date),max(envFlow$date),by=3*365),format=&quot;%Y&quot;) axis.Date(at=x.axis,side=1,cex=0.7) legend(&quot;topleft&quot;, inset=0.1 ,legend=c(&quot;Flow&quot;,&quot;Doubleflow&quot;) ,col=c(&quot;dodgerblue3&quot;,&quot;red4&quot;) ,pch=16 ,cex = 0.7) Add a polygon We can add a polygon that represents the threshold above, say, 500 ML. The polygon function draws a polygon of any shape, by listing a sequence of the x and y values of a polygon. For example, imagine it started at 0,0, then you drew a line along the x axis to x = 10, y still = 0, then you drew a line up from x still = 10 and y = 3, then backwards along the x direction from y still = 3, x = 0 again. The polygon joins all of these points. These could also be expressed as a matrix x=c(0,1,1,0) y=c(0,0,1,1) this.matrix&lt;-matrix(ncol = 2 ,nrow= 4 ,data=c(x,y) ) colnames(this.matrix)=c(&quot;x&quot;,&quot;y&quot;) In our flow plot, we use dates as the x values and the range 0 to 500 ML. The adjustcolor function allows us to make a new colour, as a variable called ‘polygoncolour’. The argument alpha sets the opacity, where 0 is completely transparent and 1 is completely opaque. polygoncolour&lt;-adjustcolor(&quot;red&quot;,alpha=0.33) If we stick it all together: plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ) polygoncolour&lt;-adjustcolor(&quot;red&quot;,alpha=0.25) polygon(x = c( envFlow$date[which(envFlow$date==&quot;1992-01-01&quot;)] ,envFlow$date[which(envFlow$date==&quot;2010-12-31&quot;)] ,envFlow$date[which(envFlow$date==&quot;2010-12-31&quot;)] ,envFlow$date[which(envFlow$date==&quot;1992-01-01&quot;)] ) ,y=c(50,50,550,550) ,col=polygoncolour ,lty = 0) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) lines(envFlow$date,doubleflow,col=&quot;red4&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Date&quot;,line=2) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=2) x.axis&lt;-as.Date(seq(min(envFlow$date),max(envFlow$date),by=3*365),format=&quot;%Y&quot;); axis.Date(at=x.axis,side=1,cex=0.7) axis(2,cex=0.7) legend(&quot;topleft&quot;, inset=0.1 ,legend=c(&quot;Flow&quot;,&quot;Doubleflow&quot;) ,col=c(&quot;dodgerblue3&quot;,&quot;red4&quot;) ,pch=16 ) Make an annual column chart We can make an annual summary then plot it as a column chart. The years of the date column can be isolated by formatting the $date column with the format function, and setting the argument to \"%Y\", which means year. The rowsum function sums rows of a matrix (there is also a function called colsum). The first argument is the matrix column to be summed. The second argument is how to group the rows that are summed, i.e. it will look for values that are the same. Here we can make a new matrix called envFlow.by.year. envFlow.by.year&lt;-rowsum(x=envFlow$totalDischarge ,group=format(envFlow$date,&quot;%Y&quot;) ) The barplot function creates a column chart. The height argument is the matrix to plot. The beside argument is set to TRUE so that there are separate columns for each year. The names.arg argument sets the labels of the x axis. The other arguments are for formatting, which you can change as you like. envFlow.by.year&lt;-rowsum(x=envFlow$totalDischarge ,group=format(envFlow$date,&quot;%Y&quot;) ) barplot(envFlow.by.year,beside = TRUE ,space=0.1 ,col=&quot;dodgerblue3&quot; ,border = NA ,ylim = c(0,max(envFlow.by.year)*1.1) ,cex.axis = 0.7,cex.names = 0.7, ,names.arg = rownames(envFlow.by.year ) ,xlab = &quot;Year&quot; ,ylab = &quot;Anual flow (ML)&quot; ) box(bty=&quot;o&quot;) Make a multi-plot figure You can make one figure that has several plots in it. One way to do this is to use the mfrow function. This sets a blank grid where the figures will be written. The arguments are the number of rows and columns that the figures are written into. To put a figure in a particular spot in this blank grid, the mfg function is used. The arguments in this function also correspond to the row and column. You can add white space around each figure using the mar function. Its arguments correspond to the number of lines below, left, above and right of the figure. For example, to make two figures above and below, in two rows, use mfrow 2,1. Alternatively, to make two figures left and right, in two columns, use mfrow 1,2. par(mfrow=c(2,1)) par(mfg=c(1,1)) par(mar=c(4,4,0.5,1)) plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;1992-01-01&quot;),date(&quot;2010-12-31&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Year&quot;,line=3) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=3) axis(2,cex.axis=0.7) x.axis&lt;-as.Date(seq(min(envFlow$date),max(envFlow$date),by=1*365),format=&quot;%Y&quot;) axis.Date(at=x.axis,side=1,cex.axis=0.7) par(mfg=c(2,1)) par(mar=c(4,4,0.5,1)) barplot(height=envFlow.by.year,beside = T ,space=0.1 ,col=&quot;dodgerblue3&quot; ,border = NA ,ylim = c(0,max(envFlow.by.year)*1.1) ,cex.axis = 0.7,cex.names = 0.7, ,names.arg = rownames(envFlow.by.year ) ,xlab = &quot;Year&quot; ,ylab = &quot;Anual flow (ML)&quot; ) box(bty=&quot;o&quot;) par(mfrow=c(1,2)) par(mfg=c(1,1)) par(mar=c(4,4,1,1)) plot(envFlow,type=&quot;n&quot; ,axes=F ,xlab=&quot;&quot;, ylab=&quot;&quot; ,xlim = c(date(&quot;1992-01-01&quot;),date(&quot;2010-12-31&quot;)) ) lines(envFlow$date,envFlow$totalDischarge,col=&quot;dodgerblue3&quot;) box(bty=&quot;o&quot;) mtext(side = 1,text=&quot;Year&quot;,line=3) mtext(side = 2,text=expression(&quot;Flow (ML d&quot;^-1*&quot;)&quot;),line=3) axis(2,cex.axis=0.7) x.axis&lt;-as.Date(seq(min(envFlow$date),max(envFlow$date),by=1*365),format=&quot;%Y&quot;) axis.Date(at=x.axis,side=1,cex.axis=0.7) par(mfg=c(1,2)) par(mar=c(4,4,1,1)) barplot(height=envFlow.by.year,beside = T ,space=0.1 ,col=&quot;dodgerblue3&quot; ,border = NA ,ylim = c(0,max(envFlow.by.year)*1.1) ,cex.axis = 0.7,cex.names = 0.7, ,names.arg = rownames(envFlow.by.year ) ,xlab = &quot;Year&quot; ,ylab = &quot;Anual flow (ML)&quot; ) box(bty=&quot;o&quot;) "],["excelbasics.html", "Learning Excel basics Excel = giant calculator Cells Plus cursor Fixed cells Formatting View the cells IF() statements A chart", " Learning Excel basics If you have not used Excel before, don’t panic. You will be good at Excel by the end of the day and very good by the end of the semester. There are many resources online that can help you learn Excel. If you type your question into Google, you have a good chance of finding the answer. On this page, some of the major basics are listed. Excel = giant calculator Excel is a giant calculator. If you click in a cell and type ‘=’, you can then do a calculation in that cell. For example, type ‘= 1 / (1 + 1)’ then Enter (or Return) and the answer will be in that cell. You can type all basic mathematical terms: ’ + - * / ^ as well as using brackets to set the order of operations: 1 / (1+1) = 0.5 (1/1) + 1 = 2 as well as inbuilt functions: =log() =average() =max() =min() Cells As well as typing values into a cell, you can also type cells into cells. Excel is a grid of letters (across) and numbers (down). In cell A1, the topleftmost cell, you can type ‘= 1 / (1 + 1)’. Then in cell B2 you can type ‘= A2 * 2’. If you click in the margin, you can select an entire row or column. Plus cursor If you cursor is a big white plus sign, it is going to highlight a cell, or several cells if you drag it across several cells. In the bottom right corner of any cell with data in it, you will see a smaller black plus sign. This small black plus will copy the value or the formula from that cell to a neighbouring cell. This is handy because it allows you to copy a cell without retyping everything. In some cases you can double click the small black plus and this will fill in many cells at once. If there is a column of values to the left of a cell, you can double click the black plus and it will fill the cells below. Fixed cells If you reference another cell and then drag the formula around, the referenced cells will also move. If you want a referenced cell to be fixed in place, you can use the $ symbol. You can also press F4 to cycle through all of the $ options. If you reference ‘$A$1’, you will always reference ‘A1’. If you reference ‘A$1’, you will always reference row 1, and column A will change. If you reference ‘$A1’, you will always reference column A, and row 1 will change. Formatting Excel is Microsoft software. You can use all of the standard formatting tools to help organise your spreadsheet. You can change the cell colour, font colour, bold font, font size, left-right alignment etc. If you click between the cell indices, say on the line between A and B, you can drag the with of the column right or left to make it larger or smaller. Similiarly, you can drag the line down and up between 1 and 2 to make the row larger or smaller. If you double click, the cell size will fit the largest value in the column or row. If a number is to long to be displayed in a cell, you will see ‘########’. If you want to see the value, expand the column until the number is visible. You can format a number on the ribbon ‘Home’, under the section ‘Number’, using the dropdown. A cell defaults to ‘General’ but you can change it to be, for example, a number, text or a date. You can change the number of decimal places that are displayed using the left and right buttons. View the cells You can ‘freeze’ the view of some cells so that they are always visible as you scroll around the spreadsheet. Look for the ‘View’ pane, then ‘Window’, then find the dropdown button ‘Freeze Panes’. If you have one cell selected, then both the rows and columns will be frozen above and to the left of that cell. If you select a row by clicking in the margin, you can freeze just the rows above (and not the columns). You would do this, for example, if you wand to view the column headings of a long time series as you scroll down the spreadsheet. You can also zoom in and out of the spreadsheet, as you would in any Microsoft program. The cells get bigger or smaller. You can do it by using the zoom bar in the bottom right of the screen, or using Ctrl and scrolling with your mouse. IF() statements There is a good explanation of IF() and nested IF() in the Module 1 exercise. The basic format has three terms in it, separated by commas: IF( if this condition is true , then do this , otherwise do this ) In terms of ‘doing this’, you can make the result a value (3.2) another cell (A$1), a function (A$1 * 3.2), or some text (“this was true”). If you want one of the conditions to be ‘do nothing’, you can make the result ‘0’, or blank text (\"\"). A chart To make a chart, go to Insert, Charts, then the dropdown button. The Scatter chart is the most reliable to set up and you can change its format later using Chart Design, Type, Change Chart Type. You can also format all aspects of the chart with the pane on the right hand side of the screen. Look at the Style Guide page to see a good format for your chart. "],["quokkas.html", "Modelling Quokkas in R", " Modelling Quokkas in R Setting up Create a new R script Go File -&gt; New File -&gt; R Script Load the tidyverse library(tidyverse) Declare the constants as variables birthRate &lt;- 1 deathRate &lt;- 0.1 timestep &lt;- 1 # i.e. 1 year timeMax &lt;- 30 carryCap &lt;- 10000 Create a new data frame of the initial values A data frame is simply a table year, relativeCarryCap, quokkaRate, and quokkaRate will be created as new columns in that table Inspect model with the head() function model &lt;- data.frame( year = 1, relativeCarryCap = NA, quokkaRate = NA, quokkaPop = 5 ) head(model) ## year relativeCarryCap quokkaRate quokkaPop ## 1 1 NA NA 5 Modelling Calculate the next timestep For the next time step we’ll need to compute new values for year, relativeCarryCap, quokkaRate, and quokkaPop. These values will be appended as a new row (i.e. timestep) to the model data frame. yeartakes a value of 2 year &lt;- 2 relativeCarryCap is the result of the previous quokka population divided by the carrying capacity model$quokkaPop[1] specifies the population in the previous row (row 1) i.e. the previous time step relativeCarryCap &lt;- model$quokkaPop[1]/carryCap quokkaRate and quokkaPop are calculated in the same fashion i.e. using the constants and values in the previous row of the model data frame quokkaRate &lt;- timestep*((1-relativeCarryCap)*birthRate*model$quokkaPop[1]-(deathRate*model$quokkaPop[1])) quokkaPop &lt;- quokkaRate+model$quokkaPop[1] Next, we’ll create an identical data frame to model with our new values model_temp &lt;- data.frame( year = year, relativeCarryCap = relativeCarryCap, quokkaRate = quokkaRate, quokkaPop = quokkaPop ) head(model_temp) ## year relativeCarryCap quokkaRate quokkaPop ## 1 2 5e-04 4.4975 9.4975 We can append this time step to model by using the rbind() function model &lt;- rbind(model,model_temp) head(model) ## year relativeCarryCap quokkaRate quokkaPop ## 1 1 NA NA 5.0000 ## 2 2 5e-04 4.4975 9.4975 Speeding things up Want to repeat that process for the next 29 time steps? Probably not. Let’s create a loop that iterates through each year, calculates the new values, and appends them to the model data frame. for(i in 2:timeMax){ year &lt;- i relativeCarryCap &lt;- model$quokkaPop[i-1]/carryCap quokkaRate = timestep*((1-relativeCarryCap)*birthRate*model$quokkaPop[i-1]-(deathRate*model$quokkaPop[i-1])) quokkaPop = quokkaRate+model$quokkaPop[i-1] model_temp &lt;- data.frame( year = year, relativeCarryCap = relativeCarryCap, quokkaRate = quokkaRate, quokkaPop = quokkaPop ) model &lt;- rbind(model,model_temp) } Visualise the modelled populations with ggplot ggplot(data=model,mapping=aes(x=year,y=quokkaPop))+ geom_line()+ labs(x=&quot;Year&quot;, y=&quot;Quokka population&quot;)+ theme_light() "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
